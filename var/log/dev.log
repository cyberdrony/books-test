[2022-04-07T16:47:07.743654+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://127.0.0.1/books/public/"" at /var/www/html/books/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://127.0.0.1/books/public/\" at /var/www/html/books/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/html/books/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:186)"} []
[2022-04-07T16:47:07.794176+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T16:47:07.796967+00:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /var/www/html/books/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /var/www/html/books/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /var/www/html/books/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)"} []
[2022-04-07T17:36:43.225814+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://127.0.0.1/books/public/"" at /var/www/html/books/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://127.0.0.1/books/public/\" at /var/www/html/books/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/html/books/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:186)"} []
[2022-04-07T17:36:43.261151+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T17:36:43.269734+00:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /var/www/html/books/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /var/www/html/books/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /var/www/html/books/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)"} []
[2022-04-07T17:36:44.619179+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://127.0.0.1/books/public/"" at /var/www/html/books/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://127.0.0.1/books/public/\" at /var/www/html/books/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/html/books/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:186)"} []
[2022-04-07T17:36:44.620480+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T17:36:44.620761+00:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /var/www/html/books/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /var/www/html/books/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /var/www/html/books/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)"} []
[2022-04-07T17:36:45.486023+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://127.0.0.1/books/public/"" at /var/www/html/books/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://127.0.0.1/books/public/\" at /var/www/html/books/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/html/books/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:186)"} []
[2022-04-07T17:36:45.489040+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T17:36:45.489632+00:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /var/www/html/books/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /var/www/html/books/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /var/www/html/books/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)"} []
[2022-04-07T17:36:46.022314+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://127.0.0.1/books/public/"" at /var/www/html/books/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://127.0.0.1/books/public/\" at /var/www/html/books/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/html/books/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:186)"} []
[2022-04-07T17:36:46.024570+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T17:36:46.024830+00:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /var/www/html/books/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /var/www/html/books/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /var/www/html/books/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)"} []
[2022-04-07T17:36:46.486884+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://127.0.0.1/books/public/"" at /var/www/html/books/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://127.0.0.1/books/public/\" at /var/www/html/books/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/html/books/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:186)"} []
[2022-04-07T17:36:46.488289+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T17:36:46.488650+00:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /var/www/html/books/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /var/www/html/books/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /var/www/html/books/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)"} []
[2022-04-07T18:44:14.362893+00:00] console.DEBUG: Command "make:crud Books" exited with code "1" {"command":"make:crud Books","code":1} []
[2022-04-07T18:53:21.167244+00:00] console.CRITICAL: Error thrown while running command "doctrine:database:create". Message: "An exception occurred in the driver: SQLSTATE[08006] [7] could not connect to server: Connection refused 	Is the server running on host "127.0.0.1" and accepting 	TCP/IP connections on port 5432?" {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /var/www/html/books/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /var/www/html/books/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /var/www/html/books/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)","command":"doctrine:database:create","message":"An exception occurred in the driver: SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432?"} []
[2022-04-07T18:53:21.168381+00:00] console.DEBUG: Command "doctrine:database:create" exited with code "7" {"command":"doctrine:database:create","code":7} []
[2022-04-07T18:56:21.110095+00:00] console.CRITICAL: Error thrown while running command "doctrine:database:create". Message: "An exception occurred in the driver: SQLSTATE[08006] [7] could not connect to server: Connection refused 	Is the server running on host "127.0.0.1" and accepting 	TCP/IP connections on port 5432?" {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /var/www/html/books/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /var/www/html/books/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /var/www/html/books/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)","command":"doctrine:database:create","message":"An exception occurred in the driver: SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432?"} []
[2022-04-07T18:56:21.110865+00:00] console.DEBUG: Command "doctrine:database:create" exited with code "7" {"command":"doctrine:database:create","code":7} []
[2022-04-07T19:14:50.521481+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T19:14:50.529330+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T19:14:50.550641+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T19:14:50.553211+00:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2022-04-07T19:14:50.554119+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T19:14:50.555010+00:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                         increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'books'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value, \n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'books'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2022-04-07T19:14:50.557165+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T19:14:50.559474+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T19:14:50.576632+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T19:14:50.583046+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T19:15:11.225924+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T19:15:11.233837+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T19:15:13.665439+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T19:15:13.678153+00:00] doctrine.DEBUG: Executing statement: CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version)) {"sql":"CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version))"} []
[2022-04-07T19:15:13.697143+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T19:15:13.698044+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T19:15:13.698358+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T19:15:13.703989+00:00] doctrine.DEBUG: Beginning transaction [] []
[2022-04-07T19:15:13.721857+00:00] doctrine.DEBUG: Executing query: CREATE SEQUENCE authors_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"CREATE SEQUENCE authors_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2022-04-07T19:15:13.724238+00:00] doctrine.DEBUG: Executing query: CREATE SEQUENCE books_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"CREATE SEQUENCE books_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2022-04-07T19:15:13.724849+00:00] doctrine.DEBUG: Executing query: CREATE TABLE authors (id INT NOT NULL, name VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE authors (id INT NOT NULL, name VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2022-04-07T19:15:13.730360+00:00] doctrine.DEBUG: Executing query: CREATE TABLE books (id INT NOT NULL, name VARCHAR(255) NOT NULL, author_id INT NOT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE books (id INT NOT NULL, name VARCHAR(255) NOT NULL, author_id INT NOT NULL, PRIMARY KEY(id))"} []
[2022-04-07T19:15:13.736519+00:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20220407191450","2":"2022-04-07 19:15:13","3":29}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20220407191450","2":"2022-04-07 19:15:13","3":29},"types":{"1":2,"2":2,"3":1}} []
[2022-04-07T19:15:13.737994+00:00] doctrine.DEBUG: Committing transaction [] []
[2022-04-07T19:15:13.740516+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T19:32:24.331628+00:00] request.INFO: Matched route "app_books". {"route":"app_books","route_parameters":{"_route":"app_books","_controller":"App\\Controller\\BooksController::index"},"request_uri":"http://127.0.0.1/books/public/index.php/books","method":"GET"} []
[2022-04-07T19:32:24.335852+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T19:32:24.382635+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T19:32:24.407255+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T19:32:24.417590+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T19:32:24.418439+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T19:32:24.418760+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T19:32:24.433695+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T19:32:24.434371+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T19:32:24.447803+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T19:32:24.448246+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T19:32:24.449566+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T19:32:24.449881+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T19:32:24.453841+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T19:32:24.454837+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T19:32:24.459474+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T19:32:24.463991+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T19:32:24.491429+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T19:32:24.555595+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"db4d60"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/db4d60","method":"GET"} []
[2022-04-07T19:33:16.703616+00:00] request.INFO: Matched route "app_books". {"route":"app_books","route_parameters":{"_route":"app_books","_controller":"App\\Controller\\BooksController::index"},"request_uri":"http://127.0.0.1/books/public/index.php/books","method":"GET"} []
[2022-04-07T19:33:16.705013+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T19:33:16.718628+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T19:33:16.726812+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T19:33:16.729844+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T19:33:16.730508+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T19:33:16.730796+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T19:33:16.733051+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T19:33:16.733467+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T19:33:16.735879+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T19:33:16.736243+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T19:33:16.736997+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T19:33:16.737334+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T19:33:16.738613+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T19:33:16.739309+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T19:33:16.740136+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T19:33:16.741196+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T19:33:16.750921+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T19:33:16.785863+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"dd6e28"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/dd6e28","method":"GET"} []
[2022-04-07T19:40:38.415170+00:00] request.INFO: Matched route "app_authors". {"route":"app_authors","route_parameters":{"_route":"app_authors","_controller":"App\\Controller\\AuthorsController::index"},"request_uri":"http://127.0.0.1/books/public/index.php/authors","method":"GET"} []
[2022-04-07T19:40:38.415915+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T19:40:38.424720+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T19:40:38.432229+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T19:40:38.435057+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T19:40:38.435697+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T19:40:38.435994+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T19:40:38.437669+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T19:40:38.438639+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T19:40:38.441036+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T19:40:38.441369+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T19:40:38.442122+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T19:40:38.442453+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T19:40:38.443383+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T19:40:38.443938+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T19:40:38.444607+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T19:40:38.446769+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T19:40:38.456313+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T19:40:38.499905+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ff6ae9"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/ff6ae9","method":"GET"} []
[2022-04-07T19:48:24.152549+00:00] console.CRITICAL: Error thrown while running command "debug". Message: "Command "debug" is not defined.  Did you mean one of these?     debug:autowiring     debug:config     debug:container     debug:dotenv     debug:event-dispatcher     debug:firewall     debug:form     debug:router     debug:translation     debug:twig     debug:validator" {"exception":"[object] (Symfony\\Component\\Console\\Exception\\CommandNotFoundException(code: 0): Command \"debug\" is not defined.\n\nDid you mean one of these?\n    debug:autowiring\n    debug:config\n    debug:container\n    debug:dotenv\n    debug:event-dispatcher\n    debug:firewall\n    debug:form\n    debug:router\n    debug:translation\n    debug:twig\n    debug:validator at /var/www/html/books/vendor/symfony/console/Application.php:709)","command":"debug","message":"Command \"debug\" is not defined.\n\nDid you mean one of these?\n    debug:autowiring\n    debug:config\n    debug:container\n    debug:dotenv\n    debug:event-dispatcher\n    debug:firewall\n    debug:form\n    debug:router\n    debug:translation\n    debug:twig\n    debug:validator"} []
[2022-04-07T19:48:39.466462+00:00] console.CRITICAL: Error thrown while running command "debug:validator". Message: "Not enough arguments (missing: "class")." {"exception":"[object] (Symfony\\Component\\Console\\Exception\\RuntimeException(code: 0): Not enough arguments (missing: \"class\"). at /var/www/html/books/vendor/symfony/console/Input/Input.php:76)","command":"debug:validator","message":"Not enough arguments (missing: \"class\")."} []
[2022-04-07T19:48:39.467324+00:00] console.DEBUG: Command "debug:validator" exited with code "1" {"command":"debug:validator","code":1} []
[2022-04-07T19:49:35.460185+00:00] console.DEBUG: Command "debug:validator AuthorsController" exited with code "1" {"command":"debug:validator AuthorsController","code":1} []
[2022-04-07T19:50:04.146931+00:00] console.DEBUG: Command "debug:validator 'Authors::AuthorsController'" exited with code "1" {"command":"debug:validator 'Authors::AuthorsController'","code":1} []
[2022-04-07T19:53:42.498051+00:00] request.INFO: Matched route "app_authors". {"route":"app_authors","route_parameters":{"_route":"app_authors","_controller":"App\\Controller\\AuthorsController::index"},"request_uri":"http://127.0.0.1/books/public/index.php/authors","method":"GET"} []
[2022-04-07T19:53:42.500609+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T19:53:42.511821+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T19:53:42.520314+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T19:53:42.523038+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T19:53:42.523698+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T19:53:42.523984+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T19:53:42.525679+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T19:53:42.526026+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T19:53:42.528389+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T19:53:42.528742+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T19:53:42.529503+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T19:53:42.529786+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T19:53:42.530706+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T19:53:42.531241+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T19:53:42.531840+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T19:53:42.532970+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T19:53:42.569983+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T19:53:42.614733+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"df528d"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/df528d","method":"GET"} []
[2022-04-07T19:54:26.057644+00:00] request.INFO: Matched route "app_authors_create". {"route":"app_authors_create","route_parameters":{"_route":"app_authors_create","_controller":"App\\Controller\\AuthorsController::create"},"request_uri":"http://127.0.0.1/books/public/index.php/authors/create","method":"GET"} []
[2022-04-07T19:54:26.058377+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T19:54:26.064127+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T19:54:26.072825+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T19:54:26.075590+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T19:54:26.076234+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T19:54:26.076509+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T19:54:26.078144+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T19:54:26.078473+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T19:54:26.080919+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T19:54:26.081289+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T19:54:26.082032+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T19:54:26.082458+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T19:54:26.085241+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T19:54:26.086025+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T19:54:26.086791+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T19:54:26.088042+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T19:54:26.099923+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T19:54:26.144890+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8d0399"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/8d0399","method":"GET"} []
[2022-04-07T19:54:45.550782+00:00] request.INFO: Matched route "app_authors_create". {"route":"app_authors_create","route_parameters":{"_route":"app_authors_create","_controller":"App\\Controller\\AuthorsController::create"},"request_uri":"http://127.0.0.1/books/public/index.php/authors/create","method":"GET"} []
[2022-04-07T19:54:45.551547+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T19:54:45.556398+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T19:54:45.561986+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T19:54:45.564650+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T19:54:45.565398+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T19:54:45.565781+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T19:54:45.567411+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T19:54:45.567768+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T19:54:45.569855+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T19:54:45.570156+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T19:54:45.570821+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T19:54:45.571096+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T19:54:45.572012+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T19:54:45.572602+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T19:54:45.573213+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T19:54:45.574821+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T19:54:45.585849+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T19:54:45.623490+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f56809"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/f56809","method":"GET"} []
[2022-04-07T19:56:58.407853+00:00] request.INFO: Matched route "app_authors_create". {"route":"app_authors_create","route_parameters":{"_route":"app_authors_create","_controller":"App\\Controller\\AuthorsController::create"},"request_uri":"http://127.0.0.1/books/public/index.php/authors/create","method":"GET"} []
[2022-04-07T19:56:58.409489+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T19:56:58.414850+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T19:56:58.421772+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T19:56:58.424747+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T19:56:58.425456+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T19:56:58.425751+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T19:56:58.427358+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T19:56:58.427712+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T19:56:58.430041+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T19:56:58.430366+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T19:56:58.431058+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T19:56:58.431346+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T19:56:58.432269+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T19:56:58.432820+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T19:56:58.433429+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T19:56:58.435160+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T19:56:58.446054+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T19:56:58.480312+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"848c3a"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/848c3a","method":"GET"} []
[2022-04-07T19:58:03.657455+00:00] request.INFO: Matched route "app_authors_create". {"route":"app_authors_create","route_parameters":{"_route":"app_authors_create","_controller":"App\\Controller\\AuthorsController::CreateAuthor"},"request_uri":"http://127.0.0.1/books/public/index.php/authors/create","method":"GET"} []
[2022-04-07T19:58:03.658218+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T19:58:03.662908+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T19:58:03.668581+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T19:58:03.671657+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T19:58:03.672365+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T19:58:03.672695+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T19:58:03.674316+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T19:58:03.674675+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T19:58:03.676941+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T19:58:03.677262+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T19:58:03.677941+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T19:58:03.678236+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T19:58:03.679170+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T19:58:03.679706+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T19:58:03.680300+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T19:58:03.681974+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T19:58:03.692280+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T19:58:03.726569+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4e6be5"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/4e6be5","method":"GET"} []
[2022-04-07T19:59:19.044047+00:00] request.INFO: Matched route "app_book_get". {"route":"app_book_get","route_parameters":{"_route":"app_book_get","_controller":"App\\Controller\\BooksController::GetBook"},"request_uri":"http://127.0.0.1/books/public/index.php/books/get","method":"GET"} []
[2022-04-07T19:59:19.044822+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T19:59:19.050703+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T19:59:19.057026+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T19:59:19.059787+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T19:59:19.060418+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T19:59:19.060698+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T19:59:19.062205+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T19:59:19.062534+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T19:59:19.064802+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T19:59:19.065132+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T19:59:19.066253+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T19:59:19.066648+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T19:59:19.067743+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T19:59:19.068396+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T19:59:19.069010+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T19:59:19.070442+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T19:59:19.079821+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T19:59:19.122161+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"804e7e"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/804e7e","method":"GET"} []
[2022-04-07T20:02:04.912188+00:00] request.INFO: Matched route "app_book_get". {"route":"app_book_get","route_parameters":{"_route":"app_book_get","_controller":"App\\Controller\\BooksController::GetBook"},"request_uri":"http://127.0.0.1/books/public/index.php/books/get","method":"GET"} []
[2022-04-07T20:02:04.912932+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T20:02:04.918371+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T20:02:04.924918+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:02:04.927703+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T20:02:04.928464+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T20:02:04.928788+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:02:04.930305+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:02:04.930600+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T20:02:04.932749+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:02:04.933066+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T20:02:04.933770+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:02:04.934050+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T20:02:04.934951+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T20:02:04.935479+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T20:02:04.936087+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T20:02:04.937642+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:02:04.951338+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T20:02:04.989647+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ef99bb"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/ef99bb","method":"GET"} []
[2022-04-07T20:02:09.322104+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://127.0.0.1/books/public/index.php/books"" at /var/www/html/books/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://127.0.0.1/books/public/index.php/books\" at /var/www/html/books/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/books/\". at /var/www/html/books/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-04-07T20:02:09.364266+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T20:02:09.370085+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:02:09.373062+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T20:02:09.374256+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T20:02:09.374693+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:02:09.377020+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:02:09.377430+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T20:02:09.379634+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:02:09.379926+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T20:02:09.380589+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:02:09.380861+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T20:02:09.381785+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T20:02:09.382288+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T20:02:09.382905+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T20:02:09.383957+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:02:09.407150+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T20:02:09.495655+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6c69c6"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/6c69c6","method":"GET"} []
[2022-04-07T20:02:43.182242+00:00] request.INFO: Matched route "app_book". {"route":"app_book","route_parameters":{"_route":"app_book","_controller":"App\\Controller\\BooksController::index"},"request_uri":"http://127.0.0.1/books/public/index.php/books","method":"GET"} []
[2022-04-07T20:02:43.182853+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T20:02:43.188380+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T20:02:43.195675+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:02:43.198503+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T20:02:43.199203+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T20:02:43.199502+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:02:43.201116+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:02:43.201453+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T20:02:43.203770+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:02:43.204206+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T20:02:43.204949+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:02:43.205261+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T20:02:43.206189+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T20:02:43.206735+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T20:02:43.207353+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T20:02:43.208970+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:02:43.215892+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T20:02:43.225225+00:00] request.INFO: Matched route "app_book_get". {"route":"app_book_get","route_parameters":{"_route":"app_book_get","_controller":"App\\Controller\\BooksController::GetBook"},"request_uri":"http://127.0.0.1/books/public/index.php/books/get","method":"GET"} []
[2022-04-07T20:02:43.225965+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T20:02:43.231168+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T20:02:43.236647+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:02:43.239759+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T20:02:43.240451+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T20:02:43.240745+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:02:43.241999+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:02:43.242328+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T20:02:43.244422+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:02:43.244722+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T20:02:43.245422+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:02:43.245703+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T20:02:43.246617+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T20:02:43.247125+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T20:02:43.247691+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T20:02:43.248677+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:02:43.257226+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T20:02:43.297389+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"90b8b4"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/90b8b4","method":"GET"} []
[2022-04-07T20:02:48.250018+00:00] request.INFO: Matched route "app_book_get". {"route":"app_book_get","route_parameters":{"_route":"app_book_get","_controller":"App\\Controller\\BooksController::GetBook"},"request_uri":"http://127.0.0.1/books/public/index.php/books/get","method":"GET"} []
[2022-04-07T20:02:48.251421+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T20:02:48.262347+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T20:02:48.279036+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:02:48.281798+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T20:02:48.282447+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T20:02:48.282853+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:02:48.284575+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:02:48.284998+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T20:02:48.288511+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:02:48.289106+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T20:02:48.289895+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:02:48.290193+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T20:02:48.291152+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T20:02:48.291687+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T20:02:48.292313+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T20:02:48.293314+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:02:48.302057+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T20:02:48.332239+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"63b979"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/63b979","method":"GET"} []
[2022-04-07T20:02:52.660008+00:00] request.INFO: Matched route "app_book". {"route":"app_book","route_parameters":{"_route":"app_book","_controller":"App\\Controller\\BooksController::index"},"request_uri":"http://127.0.0.1/books/public/index.php/books","method":"GET"} []
[2022-04-07T20:02:52.660659+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T20:02:52.665089+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T20:02:52.670991+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:02:52.675698+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T20:02:52.676441+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T20:02:52.676707+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:02:52.678129+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:02:52.678482+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T20:02:52.680688+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:02:52.681005+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T20:02:52.681697+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:02:52.682000+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T20:02:52.682983+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T20:02:52.683514+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T20:02:52.684088+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T20:02:52.685046+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:02:52.693017+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T20:02:52.700828+00:00] request.INFO: Matched route "app_book_get". {"route":"app_book_get","route_parameters":{"_route":"app_book_get","_controller":"App\\Controller\\BooksController::GetBook"},"request_uri":"http://127.0.0.1/books/public/index.php/books/get","method":"GET"} []
[2022-04-07T20:02:52.701252+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T20:02:52.713284+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T20:02:52.719399+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:02:52.724184+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T20:02:52.725002+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T20:02:52.725348+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:02:52.726819+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:02:52.727163+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T20:02:52.729361+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:02:52.729686+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T20:02:52.730384+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:02:52.730687+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T20:02:52.731690+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T20:02:52.732269+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T20:02:52.732903+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T20:02:52.733837+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:02:52.745360+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T20:02:52.796312+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b439eb"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/b439eb","method":"GET"} []
[2022-04-07T20:18:25.264782+00:00] request.INFO: Matched route "app_book_get". {"route":"app_book_get","route_parameters":{"_route":"app_book_get","_controller":"App\\Controller\\BooksController::GetBook"},"request_uri":"http://127.0.0.1/books/public/index.php/books/get","method":"GET"} []
[2022-04-07T20:18:25.265487+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T20:18:25.273046+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T20:18:25.279110+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:18:25.282412+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T20:18:25.283409+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T20:18:25.283765+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:18:25.285683+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:18:25.286055+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T20:18:25.288442+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:18:25.288792+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T20:18:25.289535+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:18:25.289838+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T20:18:25.290816+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T20:18:25.291397+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T20:18:25.292064+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T20:18:25.293271+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:18:25.302772+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T20:18:25.336157+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"75c5df"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/75c5df","method":"GET"} []
[2022-04-07T20:18:26.521835+00:00] request.INFO: Matched route "app_book_get". {"route":"app_book_get","route_parameters":{"_route":"app_book_get","_controller":"App\\Controller\\BooksController::GetBook"},"request_uri":"http://127.0.0.1/books/public/index.php/books/get","method":"GET"} []
[2022-04-07T20:18:26.522230+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T20:18:26.525517+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T20:18:26.531054+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:18:26.534744+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T20:18:26.536615+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T20:18:26.537177+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:18:26.538543+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:18:26.538914+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T20:18:26.541222+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:18:26.541531+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T20:18:26.542248+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:18:26.542537+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T20:18:26.543506+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T20:18:26.544086+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T20:18:26.544680+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T20:18:26.545722+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:18:26.554626+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T20:18:26.584743+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"314900"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/314900","method":"GET"} []
[2022-04-07T20:18:26.863323+00:00] request.INFO: Matched route "app_book_get". {"route":"app_book_get","route_parameters":{"_route":"app_book_get","_controller":"App\\Controller\\BooksController::GetBook"},"request_uri":"http://127.0.0.1/books/public/index.php/books/get","method":"GET"} []
[2022-04-07T20:18:26.863702+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T20:18:26.867572+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T20:18:26.873166+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:18:26.875911+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T20:18:26.876617+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T20:18:26.876912+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:18:26.878293+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:18:26.878703+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T20:18:26.881041+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:18:26.881424+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T20:18:26.882429+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:18:26.882857+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T20:18:26.884384+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T20:18:26.885106+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T20:18:26.885790+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T20:18:26.886823+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:18:26.905606+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T20:18:26.940953+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5caa2c"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/5caa2c","method":"GET"} []
[2022-04-07T20:20:58.587264+00:00] request.INFO: Matched route "app_book_get". {"route":"app_book_get","route_parameters":{"_route":"app_book_get","_controller":"App\\Controller\\BooksController::GetBook"},"request_uri":"http://127.0.0.1/books/public/index.php/books/get","method":"GET"} []
[2022-04-07T20:20:58.588002+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T20:20:58.593100+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T20:20:58.598283+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:20:58.600911+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T20:20:58.601544+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T20:20:58.601845+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:20:58.603373+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:20:58.603721+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T20:20:58.606017+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:20:58.606341+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T20:20:58.607094+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:20:58.607426+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T20:20:58.609314+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T20:20:58.610279+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T20:20:58.611024+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T20:20:58.612631+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:20:58.623099+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T20:20:58.662661+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3e59c4"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/3e59c4","method":"GET"} []
[2022-04-07T20:21:28.909711+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T20:21:28.910457+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T20:21:28.911384+00:00] php.CRITICAL: Uncaught Error: Class 'Symfony\Component\CssSelector\CssSelector' not found {"exception":"[object] (Error(code: 0): Class 'Symfony\\Component\\CssSelector\\CssSelector' not found at /var/www/html/books/src/Controller/BooksController.php:47)"} []
[2022-04-07T20:21:28.985761+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\ClassNotFoundError: "Attempted to load class "CssSelector" from namespace "Symfony\Component\CssSelector". Did you forget a "use" statement for another namespace?" at /var/www/html/books/src/Controller/BooksController.php line 47 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\ClassNotFoundError(code: 0): Attempted to load class \"CssSelector\" from namespace \"Symfony\\Component\\CssSelector\".\nDid you forget a \"use\" statement for another namespace? at /var/www/html/books/src/Controller/BooksController.php:47)"} []
[2022-04-07T20:21:28.995883+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T20:21:29.001343+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:21:29.003876+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T20:21:29.004487+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T20:21:29.004778+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:21:29.006458+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:21:29.006982+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T20:21:29.009507+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:21:29.009858+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T20:21:29.010550+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:21:29.010834+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T20:21:29.011726+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T20:21:29.012287+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T20:21:29.012880+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T20:21:29.014451+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:21:29.042078+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T20:21:29.119369+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"079b67"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/079b67","method":"GET"} []
[2022-04-07T20:22:00.724160+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T20:22:00.725348+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T20:22:00.726121+00:00] php.CRITICAL: Uncaught Error: Class 'App\Controller\Crawler' not found {"exception":"[object] (Error(code: 0): Class 'App\\Controller\\Crawler' not found at /var/www/html/books/src/Controller/BooksController.php:48)"} []
[2022-04-07T20:22:00.799564+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\ClassNotFoundError: "Attempted to load class "Crawler" from namespace "App\Controller". Did you forget a "use" statement for "Symfony\Component\DomCrawler\Crawler"?" at /var/www/html/books/src/Controller/BooksController.php line 48 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\ClassNotFoundError(code: 0): Attempted to load class \"Crawler\" from namespace \"App\\Controller\".\nDid you forget a \"use\" statement for \"Symfony\\Component\\DomCrawler\\Crawler\"? at /var/www/html/books/src/Controller/BooksController.php:48)"} []
[2022-04-07T20:22:00.811435+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T20:22:00.817055+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:22:00.819762+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T20:22:00.820402+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T20:22:00.820749+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:22:00.822536+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:22:00.822961+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T20:22:00.825182+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:22:00.825485+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T20:22:00.826161+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:22:00.826446+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T20:22:00.827360+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T20:22:00.827969+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T20:22:00.828573+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T20:22:00.829610+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:22:00.850959+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T20:22:00.920420+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bccb4a"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/bccb4a","method":"GET"} []
[2022-04-07T20:28:31.741143+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T20:28:31.742321+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T20:28:36.996562+00:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Warning: file_get_contents(): php_network_getaddresses: getaddrinfo failed: Name or service not known" at /var/www/html/books/src/Controller/BooksController.php line 46 {"exception":"[object] (ErrorException(code: 0): Warning: file_get_contents(): php_network_getaddresses: getaddrinfo failed: Name or service not known at /var/www/html/books/src/Controller/BooksController.php:46)"} []
[2022-04-07T20:28:37.010966+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T20:28:37.017853+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:28:37.020710+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T20:28:37.021341+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T20:28:37.021640+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:28:37.023190+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:28:37.023528+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T20:28:37.025812+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:28:37.026133+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T20:28:37.026868+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:28:37.027196+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T20:28:37.028213+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T20:28:37.028903+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T20:28:37.029636+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T20:28:37.031216+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:28:37.054077+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T20:28:37.141652+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a15c87"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/a15c87","method":"GET"} []
[2022-04-07T20:30:41.299246+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T20:30:41.300935+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T20:30:46.510247+00:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Warning: file_get_contents(): php_network_getaddresses: getaddrinfo failed: Name or service not known" at /var/www/html/books/src/Controller/BooksController.php line 46 {"exception":"[object] (ErrorException(code: 0): Warning: file_get_contents(): php_network_getaddresses: getaddrinfo failed: Name or service not known at /var/www/html/books/src/Controller/BooksController.php:46)"} []
[2022-04-07T20:30:46.527066+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T20:30:46.533125+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:30:46.536128+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T20:30:46.536898+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T20:30:46.537236+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:30:46.539055+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:30:46.539421+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T20:30:46.542362+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:30:46.542787+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T20:30:46.543645+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:30:46.543980+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T20:30:46.544899+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T20:30:46.545445+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T20:30:46.546069+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T20:30:46.547164+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:30:46.570749+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T20:30:46.642906+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6b653f"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/6b653f","method":"GET"} []
[2022-04-07T20:32:24.377899+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T20:32:24.378596+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T20:32:24.665517+00:00] php.CRITICAL: Uncaught Error: Return value of App\Controller\BooksController::getBooks() must be an instance of App\Controller\Request, instance of Symfony\Component\HttpFoundation\Response returned {"exception":"[object] (TypeError(code: 0): Return value of App\\Controller\\BooksController::getBooks() must be an instance of App\\Controller\\Request, instance of Symfony\\Component\\HttpFoundation\\Response returned at /var/www/html/books/src/Controller/BooksController.php:57)"} []
[2022-04-07T20:32:24.666865+00:00] request.CRITICAL: Uncaught PHP Exception TypeError: "Return value of App\Controller\BooksController::getBooks() must be an instance of App\Controller\Request, instance of Symfony\Component\HttpFoundation\Response returned" at /var/www/html/books/src/Controller/BooksController.php line 57 {"exception":"[object] (TypeError(code: 0): Return value of App\\Controller\\BooksController::getBooks() must be an instance of App\\Controller\\Request, instance of Symfony\\Component\\HttpFoundation\\Response returned at /var/www/html/books/src/Controller/BooksController.php:57)"} []
[2022-04-07T20:32:24.676242+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T20:32:24.681746+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:32:24.684396+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T20:32:24.685205+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T20:32:24.685653+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:32:24.687682+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:32:24.688063+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T20:32:24.690168+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:32:24.690451+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T20:32:24.691086+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:32:24.691369+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T20:32:24.692242+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T20:32:24.692781+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T20:32:24.693458+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T20:32:24.694602+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:32:24.712930+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T20:32:24.785306+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6095e3"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/6095e3","method":"GET"} []
[2022-04-07T20:33:02.397123+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T20:33:02.397847+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T20:33:02.618671+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T20:33:02.623454+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:33:02.625877+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T20:33:02.626416+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T20:33:02.626593+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:33:02.628064+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:33:02.628290+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T20:33:02.630604+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:33:02.630947+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T20:33:02.631675+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:33:02.631917+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T20:33:02.633102+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T20:33:02.633775+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T20:33:02.634358+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T20:33:02.635822+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:33:02.645023+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T20:33:02.681481+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"45181f"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/45181f","method":"GET"} []
[2022-04-07T20:33:22.869468+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T20:33:22.870822+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T20:33:22.947247+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T20:33:22.953457+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:33:22.956181+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T20:33:22.956814+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T20:33:22.957090+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:33:22.958710+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:33:22.959049+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T20:33:22.961286+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:33:22.961624+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T20:33:22.962318+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:33:22.962627+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T20:33:22.963664+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T20:33:22.964274+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T20:33:22.965181+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T20:33:22.967297+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:33:22.978139+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T20:33:23.031018+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2ff4ff"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/2ff4ff","method":"GET"} []
[2022-04-07T20:33:55.144447+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T20:33:55.145197+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T20:33:55.781282+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T20:33:55.791208+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:33:55.794943+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T20:33:55.795801+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T20:33:55.796229+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:33:55.799012+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:33:55.799561+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T20:33:55.802037+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:33:55.802363+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T20:33:55.803054+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:33:55.803356+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T20:33:55.804308+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T20:33:55.804842+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T20:33:55.805477+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T20:33:55.806565+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:33:55.816529+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T20:33:55.853119+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"03271f"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/03271f","method":"GET"} []
[2022-04-07T20:34:22.419313+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T20:34:22.420068+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T20:34:22.670684+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T20:34:22.676875+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:34:22.680684+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T20:34:22.681437+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T20:34:22.681752+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:34:22.683417+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:34:22.683758+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T20:34:22.685967+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:34:22.686219+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T20:34:22.686865+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:34:22.687088+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T20:34:22.687975+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T20:34:22.688486+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T20:34:22.688979+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T20:34:22.689949+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:34:22.699874+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T20:34:22.733366+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"215c79"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/215c79","method":"GET"} []
[2022-04-07T20:38:11.202650+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T20:38:11.203782+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T20:38:11.502740+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T20:38:11.509241+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:38:11.512052+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T20:38:11.512887+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T20:38:11.513233+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:38:11.515084+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:38:11.515541+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T20:38:11.518201+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:38:11.518611+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T20:38:11.519596+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:38:11.519969+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T20:38:11.521090+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T20:38:11.521733+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T20:38:11.522532+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T20:38:11.523909+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:38:11.533825+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T20:38:11.568587+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c2d03f"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/c2d03f","method":"GET"} []
[2022-04-07T20:38:47.778517+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T20:38:47.779248+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T20:38:48.352730+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T20:38:48.361505+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:38:48.366814+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T20:38:48.367963+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T20:38:48.368464+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:38:48.371005+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:38:48.371524+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T20:38:48.375096+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:38:48.375582+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T20:38:48.376546+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:38:48.376952+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T20:38:48.378287+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T20:38:48.379012+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T20:38:48.380035+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T20:38:48.381875+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:38:48.392812+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T20:38:48.427173+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c4f3ef"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/c4f3ef","method":"GET"} []
[2022-04-07T20:40:17.395172+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T20:40:17.395971+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T20:40:17.999070+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T20:40:18.005081+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:40:18.008350+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T20:40:18.009516+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T20:40:18.009905+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:40:18.012265+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:40:18.012712+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T20:40:18.015118+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:40:18.015490+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T20:40:18.016265+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:40:18.016570+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T20:40:18.017596+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T20:40:18.018174+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T20:40:18.018808+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T20:40:18.019925+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:40:18.029290+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T20:40:18.062414+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2f0551"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/2f0551","method":"GET"} []
[2022-04-07T20:44:15.624985+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T20:44:15.625730+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T20:44:16.235864+00:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Warning: DOMXPath::query(): Undefined namespace prefix" at /var/www/html/books/vendor/symfony/dom-crawler/Crawler.php line 1013 {"exception":"[object] (ErrorException(code: 0): Warning: DOMXPath::query(): Undefined namespace prefix at /var/www/html/books/vendor/symfony/dom-crawler/Crawler.php:1013)"} []
[2022-04-07T20:44:16.253967+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T20:44:16.260367+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:44:16.263401+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T20:44:16.264105+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T20:44:16.264420+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:44:16.266003+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:44:16.266324+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T20:44:16.268617+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:44:16.268944+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T20:44:16.269766+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:44:16.270083+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T20:44:16.270997+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T20:44:16.271550+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T20:44:16.272163+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T20:44:16.273272+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:44:16.293728+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T20:44:16.368202+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"524bbf"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/524bbf","method":"GET"} []
[2022-04-07T20:44:58.479811+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T20:44:58.480498+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T20:44:59.111910+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T20:44:59.122854+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:44:59.129145+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T20:44:59.130630+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T20:44:59.131305+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:44:59.134960+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:44:59.135656+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T20:44:59.139278+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:44:59.139683+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T20:44:59.140661+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:44:59.141069+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T20:44:59.142708+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T20:44:59.143575+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T20:44:59.144433+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T20:44:59.145968+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:44:59.156762+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T20:44:59.197429+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c216a1"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/c216a1","method":"GET"} []
[2022-04-07T20:45:28.436765+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T20:45:28.437459+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T20:45:28.780992+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T20:45:28.788559+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:45:28.792191+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T20:45:28.792950+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T20:45:28.793267+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:45:28.795623+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:45:28.796136+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T20:45:28.798687+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:45:28.799043+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T20:45:28.799928+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:45:28.800249+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T20:45:28.801237+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T20:45:28.801821+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T20:45:28.802510+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T20:45:28.803804+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:45:28.813434+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T20:45:28.846974+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2e51a8"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/2e51a8","method":"GET"} []
[2022-04-07T20:48:19.084339+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T20:48:19.085058+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T20:48:19.385212+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T20:48:19.390883+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:48:19.393736+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T20:48:19.394486+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T20:48:19.394772+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:48:19.396421+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:48:19.396837+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T20:48:19.400385+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:48:19.400756+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T20:48:19.401488+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:48:19.401777+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T20:48:19.402726+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T20:48:19.403271+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T20:48:19.403870+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T20:48:19.404974+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:48:19.414489+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T20:48:19.451834+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2ac8e7"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/2ac8e7","method":"GET"} []
[2022-04-07T20:48:58.826769+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T20:48:58.827488+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T20:48:59.167740+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T20:48:59.174825+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:48:59.178589+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T20:48:59.179799+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T20:48:59.180184+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:48:59.182089+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:48:59.182460+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T20:48:59.184989+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:48:59.185344+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T20:48:59.186123+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:48:59.186447+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T20:48:59.187570+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T20:48:59.188241+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T20:48:59.188914+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T20:48:59.190110+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:48:59.200535+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T20:48:59.236935+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"949b41"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/949b41","method":"GET"} []
[2022-04-07T20:49:16.038821+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T20:49:16.039513+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T20:49:16.325789+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T20:49:16.334043+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:49:16.337231+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T20:49:16.337996+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T20:49:16.338350+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:49:16.340638+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:49:16.341104+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T20:49:16.343711+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:49:16.344301+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T20:49:16.345305+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:49:16.345677+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T20:49:16.346742+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T20:49:16.347338+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T20:49:16.348086+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T20:49:16.349270+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:49:16.360659+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T20:49:16.395975+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"46b821"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/46b821","method":"GET"} []
[2022-04-07T20:50:12.861113+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T20:50:12.861836+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T20:50:13.150176+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T20:50:13.158019+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:50:13.161667+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T20:50:13.162425+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T20:50:13.162758+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:50:13.165165+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:50:13.165622+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T20:50:13.168432+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:50:13.168807+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T20:50:13.169705+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:50:13.170064+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T20:50:13.171074+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T20:50:13.171636+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T20:50:13.172289+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T20:50:13.173795+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:50:13.184193+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T20:50:13.218097+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0c71f8"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/0c71f8","method":"GET"} []
[2022-04-07T20:50:49.361387+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T20:50:49.362071+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T20:50:49.681059+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T20:50:49.687014+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:50:49.690167+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T20:50:49.690847+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T20:50:49.691148+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:50:49.692915+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:50:49.693330+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T20:50:49.695703+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:50:49.696035+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T20:50:49.696800+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:50:49.697092+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T20:50:49.698065+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T20:50:49.698591+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T20:50:49.699169+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T20:50:49.700264+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:50:49.710900+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T20:50:49.744023+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"406d1d"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/406d1d","method":"GET"} []
[2022-04-07T20:51:37.560052+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T20:51:37.560834+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T20:51:37.887951+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T20:51:37.894625+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:51:37.897946+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T20:51:37.898727+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T20:51:37.899086+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:51:37.900954+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:51:37.901354+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T20:51:37.904728+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:51:37.905226+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T20:51:37.906150+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:51:37.906481+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T20:51:37.907480+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T20:51:37.908078+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T20:51:37.908666+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T20:51:37.909697+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:51:37.919011+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T20:51:58.366257+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T20:51:58.366993+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T20:51:58.653352+00:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Warning: DOMXPath::query(): Undefined namespace prefix" at /var/www/html/books/vendor/symfony/dom-crawler/Crawler.php line 1013 {"exception":"[object] (ErrorException(code: 0): Warning: DOMXPath::query(): Undefined namespace prefix at /var/www/html/books/vendor/symfony/dom-crawler/Crawler.php:1013)"} []
[2022-04-07T20:51:58.670915+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T20:51:58.676467+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:51:58.679123+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T20:51:58.679859+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T20:51:58.680150+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:51:58.681695+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:51:58.682045+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T20:51:58.684400+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:51:58.684863+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T20:51:58.685749+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:51:58.686063+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T20:51:58.687014+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T20:51:58.687566+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T20:51:58.688219+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T20:51:58.689317+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:51:58.710594+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T20:52:05.180774+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T20:52:05.181658+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T20:52:05.460530+00:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Warning: DOMXPath::query(): Undefined namespace prefix" at /var/www/html/books/vendor/symfony/dom-crawler/Crawler.php line 1013 {"exception":"[object] (ErrorException(code: 0): Warning: DOMXPath::query(): Undefined namespace prefix at /var/www/html/books/vendor/symfony/dom-crawler/Crawler.php:1013)"} []
[2022-04-07T20:52:05.480789+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T20:52:05.487434+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:52:05.490203+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T20:52:05.490889+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T20:52:05.491188+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:52:05.492717+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:52:05.493059+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T20:52:05.495282+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:52:05.495606+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T20:52:05.496368+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:52:05.496678+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T20:52:05.497686+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T20:52:05.498311+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T20:52:05.498959+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T20:52:05.500495+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:52:05.521956+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T20:52:05.592818+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3e25c5"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/3e25c5","method":"GET"} []
[2022-04-07T20:52:18.102898+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T20:52:18.103592+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T20:52:18.696019+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T20:52:18.705283+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:52:18.709045+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T20:52:18.709949+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T20:52:18.710344+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:52:18.713248+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:52:18.713904+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T20:52:18.717636+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:52:18.718289+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T20:52:18.719602+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:52:18.720080+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T20:52:18.721356+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T20:52:18.722094+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T20:52:18.722910+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T20:52:18.724333+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:52:18.736254+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T20:52:18.773682+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2c495b"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/2c495b","method":"GET"} []
[2022-04-07T20:52:40.959965+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T20:52:40.960890+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T20:52:41.277097+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T20:52:41.284856+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:52:41.287609+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T20:52:41.288360+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T20:52:41.288688+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:52:41.290275+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:52:41.290610+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T20:52:41.292921+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:52:41.293244+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T20:52:41.294066+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:52:41.294379+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T20:52:41.295336+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T20:52:41.295857+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T20:52:41.296508+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T20:52:41.297629+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:52:41.306819+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T20:52:52.459483+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T20:52:52.460219+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T20:52:52.742405+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T20:52:52.748435+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:52:52.752135+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T20:52:52.752786+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T20:52:52.752982+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:52:52.754945+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:52:52.755264+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T20:52:52.757481+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:52:52.757763+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T20:52:52.758415+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:52:52.758670+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T20:52:52.759613+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T20:52:52.760209+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T20:52:52.761072+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T20:52:52.762384+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:52:52.772051+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T20:57:01.049567+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T20:57:01.051090+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T20:57:01.661105+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\CssSelector\Exception\ExpressionErrorException: "Pseudo-class "entry" not supported." at /var/www/html/books/vendor/symfony/css-selector/XPath/Translator.php line 197 {"exception":"[object] (Symfony\\Component\\CssSelector\\Exception\\ExpressionErrorException(code: 0): Pseudo-class \"entry\" not supported. at /var/www/html/books/vendor/symfony/css-selector/XPath/Translator.php:197)"} []
[2022-04-07T20:57:01.693615+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T20:57:01.700771+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:57:01.704080+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T20:57:01.704828+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T20:57:01.705140+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:57:01.706807+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:57:01.707161+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T20:57:01.709554+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:57:01.709899+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T20:57:01.710651+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:57:01.710945+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T20:57:01.711890+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T20:57:01.712464+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T20:57:01.713150+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T20:57:01.714406+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:57:01.745841+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T20:57:07.395044+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T20:57:07.396164+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T20:57:07.684628+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\CssSelector\Exception\ExpressionErrorException: "Pseudo-class "entry" not supported." at /var/www/html/books/vendor/symfony/css-selector/XPath/Translator.php line 197 {"exception":"[object] (Symfony\\Component\\CssSelector\\Exception\\ExpressionErrorException(code: 0): Pseudo-class \"entry\" not supported. at /var/www/html/books/vendor/symfony/css-selector/XPath/Translator.php:197)"} []
[2022-04-07T20:57:07.710990+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T20:57:07.716839+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:57:07.719980+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T20:57:07.720660+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T20:57:07.720965+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:57:07.722623+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:57:07.722959+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T20:57:07.725216+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:57:07.725548+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T20:57:07.726254+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:57:07.726564+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T20:57:07.727516+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T20:57:07.728093+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T20:57:07.728720+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T20:57:07.729897+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:57:07.753044+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T20:57:07.826435+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ea4585"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/ea4585","method":"GET"} []
[2022-04-07T20:57:33.161678+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T20:57:33.162325+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T20:57:33.447726+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T20:57:33.454741+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:57:33.457384+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T20:57:33.458088+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T20:57:33.458361+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:57:33.460035+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:57:33.460286+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T20:57:33.462643+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:57:33.462927+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T20:57:33.463605+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:57:33.463844+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T20:57:33.464752+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T20:57:33.465484+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T20:57:33.466371+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T20:57:33.468053+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:57:33.477853+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T20:57:33.515718+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"629174"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/629174","method":"GET"} []
[2022-04-07T20:58:05.769962+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T20:58:05.770618+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T20:58:06.365687+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T20:58:06.375583+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:58:06.380355+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T20:58:06.381585+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T20:58:06.382062+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:58:06.385103+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:58:06.385696+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T20:58:06.389026+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:58:06.389455+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T20:58:06.390415+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:58:06.390765+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T20:58:06.391849+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T20:58:06.392501+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T20:58:06.393236+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T20:58:06.394677+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:58:06.405260+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T20:58:12.224916+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T20:58:12.225570+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T20:58:12.529213+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T20:58:12.537318+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:58:12.540770+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T20:58:12.541536+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T20:58:12.541868+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:58:12.543681+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:58:12.544084+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T20:58:12.546730+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:58:12.547174+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T20:58:12.548263+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:58:12.548646+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T20:58:12.549786+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T20:58:12.550457+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T20:58:12.551193+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T20:58:12.552431+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:58:12.561951+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T20:58:12.597039+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a4e429"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/a4e429","method":"GET"} []
[2022-04-07T20:58:40.281524+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T20:58:40.283075+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T20:58:40.848565+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\CssSelector\Exception\SyntaxErrorException: "Expected selector, but <eof at 6> found." at /var/www/html/books/vendor/symfony/css-selector/Exception/SyntaxErrorException.php line 31 {"exception":"[object] (Symfony\\Component\\CssSelector\\Exception\\SyntaxErrorException(code: 0): Expected selector, but <eof at 6> found. at /var/www/html/books/vendor/symfony/css-selector/Exception/SyntaxErrorException.php:31)"} []
[2022-04-07T20:58:40.874686+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T20:58:40.881174+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:58:40.883841+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T20:58:40.884489+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T20:58:40.884793+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:58:40.886426+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:58:40.886818+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T20:58:40.889180+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:58:40.889516+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T20:58:40.890222+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:58:40.890507+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T20:58:40.891510+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T20:58:40.892048+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T20:58:40.892694+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T20:58:40.893930+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:58:40.918898+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T20:58:40.986958+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3de36d"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/3de36d","method":"GET"} []
[2022-04-07T20:59:01.372062+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T20:59:01.372803+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T20:59:01.687824+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T20:59:01.695400+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:59:01.698640+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T20:59:01.699369+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T20:59:01.699704+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:59:01.701699+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:59:01.702223+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T20:59:01.705145+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:59:01.705558+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T20:59:01.706364+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:59:01.706669+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T20:59:01.707723+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T20:59:01.708331+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T20:59:01.708979+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T20:59:01.710286+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:59:01.719930+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T20:59:01.754149+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"106ba1"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/106ba1","method":"GET"} []
[2022-04-07T20:59:42.701994+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T20:59:42.702682+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T20:59:43.277590+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T20:59:43.283277+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:59:43.286036+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T20:59:43.286723+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T20:59:43.287022+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T20:59:43.288735+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:59:43.289087+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T20:59:43.292096+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:59:43.292671+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T20:59:43.293766+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:59:43.294133+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T20:59:43.295092+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T20:59:43.295618+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T20:59:43.296206+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T20:59:43.297290+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T20:59:43.307097+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T20:59:43.345207+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7d2503"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/7d2503","method":"GET"} []
[2022-04-07T21:00:32.508202+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:00:32.508960+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:00:33.097532+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:00:33.103903+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:00:33.107156+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:00:33.107841+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:00:33.108162+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:00:33.110416+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:00:33.110899+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:00:33.113403+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:00:33.113787+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:00:33.114558+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:00:33.114910+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:00:33.115895+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:00:33.116478+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:00:33.117124+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:00:33.118429+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:00:33.128090+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:00:46.989858+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:00:46.990523+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:00:47.546629+00:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Warning: DOMXPath::query(): Undefined namespace prefix" at /var/www/html/books/vendor/symfony/dom-crawler/Crawler.php line 1013 {"exception":"[object] (ErrorException(code: 0): Warning: DOMXPath::query(): Undefined namespace prefix at /var/www/html/books/vendor/symfony/dom-crawler/Crawler.php:1013)"} []
[2022-04-07T21:00:47.574119+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:00:47.581464+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:00:47.585412+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:00:47.586406+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:00:47.586790+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:00:47.589354+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:00:47.589856+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:00:47.592955+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:00:47.593377+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:00:47.594297+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:00:47.594680+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:00:47.595845+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:00:47.596490+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:00:47.597200+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:00:47.598627+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:00:47.623036+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:01:00.611362+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:01:00.612628+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:01:01.152107+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:01:01.162395+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:01:01.166984+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:01:01.168015+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:01:01.168421+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:01:01.171883+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:01:01.172632+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:01:01.175519+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:01:01.175886+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:01:01.176754+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:01:01.177097+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:01:01.178196+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:01:01.178767+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:01:01.179422+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:01:01.180648+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:01:01.190302+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:01:14.045258+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:01:14.045925+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:01:14.308168+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:01:14.315909+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:01:14.319166+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:01:14.320172+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:01:14.320517+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:01:14.323194+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:01:14.323736+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:01:14.326421+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:01:14.326763+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:01:14.327528+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:01:14.327847+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:01:14.328936+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:01:14.329499+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:01:14.330078+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:01:14.331219+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:01:14.340658+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:01:17.394361+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:01:17.395026+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:01:17.988425+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:01:17.993890+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:01:17.996840+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:01:17.997577+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:01:17.997898+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:01:17.999419+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:01:17.999845+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:01:18.002179+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:01:18.002708+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:01:18.003864+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:01:18.004282+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:01:18.005277+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:01:18.005849+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:01:18.006489+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:01:18.007515+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:01:18.016227+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:01:34.355441+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:01:34.356185+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:01:34.880953+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\CssSelector\Exception\ExpressionErrorException: "Pseudo-class "href" not supported." at /var/www/html/books/vendor/symfony/css-selector/XPath/Translator.php line 197 {"exception":"[object] (Symfony\\Component\\CssSelector\\Exception\\ExpressionErrorException(code: 0): Pseudo-class \"href\" not supported. at /var/www/html/books/vendor/symfony/css-selector/XPath/Translator.php:197)"} []
[2022-04-07T21:01:34.913016+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:01:34.920402+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:01:34.923356+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:01:34.924053+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:01:34.924391+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:01:34.925956+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:01:34.926319+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:01:34.928608+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:01:34.928920+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:01:34.929645+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:01:34.929952+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:01:34.931006+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:01:34.931610+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:01:34.932306+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:01:34.933515+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:01:34.955950+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:02:18.609685+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:02:18.610393+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:02:18.951541+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:02:18.959088+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:02:18.962355+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:02:18.963123+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:02:18.963482+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:02:18.966699+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:02:18.967308+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:02:18.970037+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:02:18.970397+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:02:18.971134+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:02:18.971438+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:02:18.972429+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:02:18.972994+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:02:18.973658+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:02:18.974945+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:02:18.984503+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:04:25.306727+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:04:25.307407+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:04:25.890506+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:04:25.898845+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:04:25.902008+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:04:25.902743+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:04:25.903081+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:04:25.905468+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:04:25.905925+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:04:25.908930+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:04:25.909450+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:04:25.910440+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:04:25.910738+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:04:25.911644+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:04:25.912233+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:04:25.912876+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:04:25.914078+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:04:25.923212+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:05:43.235460+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:05:43.236161+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:05:43.552632+00:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Warning: DOMXPath::query(): Undefined namespace prefix" at /var/www/html/books/vendor/symfony/dom-crawler/Crawler.php line 1013 {"exception":"[object] (ErrorException(code: 0): Warning: DOMXPath::query(): Undefined namespace prefix at /var/www/html/books/vendor/symfony/dom-crawler/Crawler.php:1013)"} []
[2022-04-07T21:05:43.577455+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:05:43.583014+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:05:43.585812+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:05:43.586580+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:05:43.586890+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:05:43.589081+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:05:43.589559+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:05:43.591787+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:05:43.592069+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:05:43.592693+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:05:43.592930+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:05:43.593766+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:05:43.594245+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:05:43.594776+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:05:43.595854+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:05:43.617919+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:06:16.193600+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:06:16.194283+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:06:16.505687+00:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Warning: DOMXPath::query(): Undefined namespace prefix" at /var/www/html/books/vendor/symfony/dom-crawler/Crawler.php line 1013 {"exception":"[object] (ErrorException(code: 0): Warning: DOMXPath::query(): Undefined namespace prefix at /var/www/html/books/vendor/symfony/dom-crawler/Crawler.php:1013)"} []
[2022-04-07T21:06:16.525646+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:06:16.531775+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:06:16.534716+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:06:16.535583+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:06:16.535977+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:06:16.537922+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:06:16.538299+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:06:16.540542+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:06:16.540858+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:06:16.541539+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:06:16.541852+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:06:16.542788+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:06:16.543339+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:06:16.544000+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:06:16.545132+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:06:16.569078+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:06:34.041477+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:06:34.042152+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:06:34.340385+00:00] php.CRITICAL: Uncaught Error: Too few arguments to function Symfony\Component\DomCrawler\Crawler::filter(), 0 passed in /var/www/html/books/src/Controller/BooksController.php on line 52 and exactly 1 expected {"exception":"[object] (ArgumentCountError(code: 0): Too few arguments to function Symfony\\Component\\DomCrawler\\Crawler::filter(), 0 passed in /var/www/html/books/src/Controller/BooksController.php on line 52 and exactly 1 expected at /var/www/html/books/vendor/symfony/dom-crawler/Crawler.php:783)"} []
[2022-04-07T21:06:34.343621+00:00] request.CRITICAL: Uncaught PHP Exception ArgumentCountError: "Too few arguments to function Symfony\Component\DomCrawler\Crawler::filter(), 0 passed in /var/www/html/books/src/Controller/BooksController.php on line 52 and exactly 1 expected" at /var/www/html/books/vendor/symfony/dom-crawler/Crawler.php line 783 {"exception":"[object] (ArgumentCountError(code: 0): Too few arguments to function Symfony\\Component\\DomCrawler\\Crawler::filter(), 0 passed in /var/www/html/books/src/Controller/BooksController.php on line 52 and exactly 1 expected at /var/www/html/books/vendor/symfony/dom-crawler/Crawler.php:783)"} []
[2022-04-07T21:06:34.363797+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:06:34.371903+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:06:34.374991+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:06:34.375760+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:06:34.376109+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:06:34.377977+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:06:34.378378+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:06:34.381169+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:06:34.381594+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:06:34.382409+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:06:34.382776+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:06:34.383897+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:06:34.384829+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:06:34.385984+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:06:34.387193+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:06:34.406901+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:06:55.284497+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:06:55.286086+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:06:55.538514+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:06:55.544611+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:06:55.547544+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:06:55.548326+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:06:55.548659+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:06:55.550308+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:06:55.550746+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:06:55.553160+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:06:55.553491+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:06:55.554193+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:06:55.554484+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:06:55.555452+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:06:55.556018+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:06:55.556663+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:06:55.557748+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:06:55.568646+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:07:26.628488+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:07:26.629375+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:07:27.233747+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\CssSelector\Exception\SyntaxErrorException: "Expected selector, but <delimiter "<" at 0> found." at /var/www/html/books/vendor/symfony/css-selector/Exception/SyntaxErrorException.php line 31 {"exception":"[object] (Symfony\\Component\\CssSelector\\Exception\\SyntaxErrorException(code: 0): Expected selector, but <delimiter \"<\" at 0> found. at /var/www/html/books/vendor/symfony/css-selector/Exception/SyntaxErrorException.php:31)"} []
[2022-04-07T21:07:27.261075+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:07:27.267300+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:07:27.270190+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:07:27.270876+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:07:27.271184+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:07:27.272796+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:07:27.273150+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:07:27.275770+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:07:27.276109+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:07:27.276812+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:07:27.277109+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:07:27.278054+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:07:27.278649+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:07:27.279338+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:07:27.280536+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:07:27.305973+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:07:49.525714+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:07:49.526391+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:07:50.151520+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\CssSelector\Exception\SyntaxErrorException: "Expected selector, but <delimiter "=" at 0> found." at /var/www/html/books/vendor/symfony/css-selector/Exception/SyntaxErrorException.php line 31 {"exception":"[object] (Symfony\\Component\\CssSelector\\Exception\\SyntaxErrorException(code: 0): Expected selector, but <delimiter \"=\" at 0> found. at /var/www/html/books/vendor/symfony/css-selector/Exception/SyntaxErrorException.php:31)"} []
[2022-04-07T21:07:50.172611+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:07:50.178667+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:07:50.181807+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:07:50.182536+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:07:50.182851+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:07:50.184481+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:07:50.184957+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:07:50.188463+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:07:50.188869+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:07:50.189621+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:07:50.189968+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:07:50.190951+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:07:50.191541+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:07:50.192228+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:07:50.193445+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:07:50.217467+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:08:08.026571+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:08:08.027278+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:08:08.573043+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\CssSelector\Exception\SyntaxErrorException: "Unclosed/invalid string at 0." at /var/www/html/books/vendor/symfony/css-selector/Exception/SyntaxErrorException.php line 47 {"exception":"[object] (Symfony\\Component\\CssSelector\\Exception\\SyntaxErrorException(code: 0): Unclosed/invalid string at 0. at /var/www/html/books/vendor/symfony/css-selector/Exception/SyntaxErrorException.php:47)"} []
[2022-04-07T21:08:08.613339+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:08:08.619518+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:08:08.622256+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:08:08.622924+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:08:08.623238+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:08:08.624878+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:08:08.625221+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:08:08.627523+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:08:08.627857+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:08:08.628809+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:08:08.629229+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:08:08.630322+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:08:08.631039+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:08:08.631718+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:08:08.632989+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:08:08.656567+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:10:27.386145+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:10:27.386879+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:10:27.712528+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:10:27.719534+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:10:27.723379+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:10:27.724202+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:10:27.724556+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:10:27.726180+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:10:27.726527+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:10:27.728859+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:10:27.729209+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:10:27.729993+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:10:27.730293+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:10:27.731320+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:10:27.731933+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:10:27.732545+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:10:27.733846+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:10:27.745080+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:10:27.777516+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"15408f"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/15408f","method":"GET"} []
[2022-04-07T21:12:00.588596+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:12:00.589263+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:12:01.184668+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:12:01.191057+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:12:01.194049+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:12:01.194756+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:12:01.195086+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:12:01.196973+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:12:01.197507+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:12:01.200383+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:12:01.200803+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:12:01.201597+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:12:01.201876+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:12:01.202803+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:12:01.203328+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:12:01.203925+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:12:01.204996+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:12:01.214329+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:12:06.544337+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:12:06.544996+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:12:06.814379+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:12:06.820440+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:12:06.823086+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:12:06.823785+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:12:06.824111+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:12:06.825826+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:12:06.826210+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:12:06.828934+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:12:06.829299+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:12:06.830035+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:12:06.830339+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:12:06.831311+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:12:06.832107+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:12:06.833051+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:12:06.834334+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:12:06.843398+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:12:06.878003+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"855cef"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/855cef","method":"GET"} []
[2022-04-07T21:12:30.154222+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:12:30.154914+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:12:30.457679+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:12:30.465605+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:12:30.468829+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:12:30.469593+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:12:30.469945+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:12:30.471601+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:12:30.471961+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:12:30.474409+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:12:30.474792+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:12:30.475564+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:12:30.475901+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:12:30.476921+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:12:30.477505+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:12:30.478238+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:12:30.479355+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:12:30.488839+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:12:30.526623+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d2b0b3"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/d2b0b3","method":"GET"} []
[2022-04-07T21:12:41.953951+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:12:41.954707+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:12:42.271661+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:12:42.277353+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:12:42.280172+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:12:42.281030+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:12:42.281413+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:12:42.282969+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:12:42.283245+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:12:42.285370+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:12:42.285633+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:12:42.286290+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:12:42.286540+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:12:42.287405+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:12:42.287934+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:12:42.288525+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:12:42.289477+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:12:42.298674+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:13:15.282331+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:13:15.282991+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:13:15.584379+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:13:15.592221+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:13:15.596221+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:13:15.597144+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:13:15.597503+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:13:15.599338+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:13:15.599727+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:13:15.602390+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:13:15.602758+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:13:15.603528+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:13:15.603862+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:13:15.604953+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:13:15.605563+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:13:15.606275+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:13:15.607578+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:13:15.617662+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:14:02.006322+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:14:02.006919+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:14:02.592489+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:14:02.603833+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:14:02.609873+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:14:02.611824+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:14:02.612522+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:14:02.616408+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:14:02.617014+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:14:02.620582+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:14:02.620988+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:14:02.621924+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:14:02.622308+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:14:02.623569+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:14:02.624295+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:14:02.625400+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:14:02.627211+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:14:02.637610+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:14:45.813746+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:14:45.814440+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:14:46.128391+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:14:46.135629+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:14:46.138970+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:14:46.140314+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:14:46.140999+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:14:46.143289+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:14:46.143697+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:14:46.146073+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:14:46.146422+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:14:46.147160+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:14:46.147438+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:14:46.148462+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:14:46.149018+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:14:46.149648+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:14:46.150736+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:14:46.161798+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:18:29.046540+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:18:29.047299+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:18:29.355792+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:18:29.363696+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:18:29.367410+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:18:29.368301+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:18:29.368668+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:18:29.371236+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:18:29.371722+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:18:29.374476+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:18:29.374831+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:18:29.375573+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:18:29.375909+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:18:29.377299+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:18:29.378278+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:18:29.379323+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:18:29.380514+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:18:29.389592+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:18:29.425905+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"50f5eb"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/50f5eb","method":"GET"} []
[2022-04-07T21:19:52.194097+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:19:52.194850+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:19:52.477730+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:19:52.484613+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:19:52.487503+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:19:52.488202+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:19:52.488564+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:19:52.490316+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:19:52.490702+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:19:52.493031+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:19:52.493358+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:19:52.494057+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:19:52.494340+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:19:52.495241+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:19:52.495767+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:19:52.496391+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:19:52.497490+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:19:52.508361+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:19:52.541660+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"18afa7"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/18afa7","method":"GET"} []
[2022-04-07T21:20:31.658860+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:20:31.659659+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:20:31.938431+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:20:31.948687+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:20:31.952407+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:20:31.953554+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:20:31.954007+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:20:31.956170+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:20:31.956641+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:20:31.959719+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:20:31.960097+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:20:31.960959+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:20:31.961296+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:20:31.962458+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:20:31.963114+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:20:31.963834+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:20:31.965137+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:20:31.975658+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:20:32.011031+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"53f4f0"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/53f4f0","method":"GET"} []
[2022-04-07T21:20:46.369612+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:20:46.371150+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:20:46.648965+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:20:46.654575+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:20:46.657247+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:20:46.657797+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:20:46.658117+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:20:46.659768+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:20:46.660105+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:20:46.662355+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:20:46.662638+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:20:46.663384+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:20:46.663626+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:20:46.664576+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:20:46.665153+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:20:46.665753+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:20:46.666795+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:20:46.675109+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:20:46.706953+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3909ab"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/3909ab","method":"GET"} []
[2022-04-07T21:21:47.182742+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:21:47.184377+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:21:47.493215+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:21:47.499532+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:21:47.502722+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:21:47.503465+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:21:47.503823+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:21:47.505821+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:21:47.506262+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:21:47.508867+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:21:47.509207+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:21:47.509968+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:21:47.510261+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:21:47.511248+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:21:47.511850+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:21:47.512496+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:21:47.513627+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:21:47.522383+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:21:47.555483+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0f83df"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/0f83df","method":"GET"} []
[2022-04-07T21:22:51.651992+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:22:51.652618+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:22:51.928128+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:22:51.936355+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:22:51.940132+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:22:51.941054+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:22:51.941472+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:22:51.943482+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:22:51.943887+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:22:51.947008+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:22:51.947421+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:22:51.948258+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:22:51.948607+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:22:51.949759+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:22:51.950434+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:22:51.951170+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:22:51.952458+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:22:51.961764+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:22:52.000987+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2ba5ff"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/2ba5ff","method":"GET"} []
[2022-04-07T21:22:54.279802+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:22:54.281025+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:22:54.545384+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:22:54.550982+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:22:54.553881+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:22:54.554571+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:22:54.554851+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:22:54.556401+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:22:54.556792+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:22:54.559498+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:22:54.559827+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:22:54.560567+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:22:54.560851+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:22:54.562146+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:22:54.562793+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:22:54.563493+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:22:54.564641+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:22:54.573161+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:22:54.605485+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6539b4"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/6539b4","method":"GET"} []
[2022-04-07T21:23:08.740020+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:23:08.740729+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:23:09.043368+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:23:09.049093+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:23:09.051902+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:23:09.052577+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:23:09.052878+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:23:09.054756+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:23:09.055172+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:23:09.057708+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:23:09.058061+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:23:09.058833+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:23:09.059136+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:23:09.060107+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:23:09.060919+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:23:09.061852+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:23:09.063248+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:23:09.072037+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:23:09.104214+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"697808"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/697808","method":"GET"} []
[2022-04-07T21:23:57.587914+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:23:57.588667+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:23:57.915070+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:23:57.922879+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:23:57.926478+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:23:57.927358+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:23:57.927708+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:23:57.929824+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:23:57.930276+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:23:57.933514+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:23:57.933927+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:23:57.934833+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:23:57.935173+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:23:57.936140+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:23:57.936719+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:23:57.937375+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:23:57.938563+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:23:57.947389+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:23:57.980605+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"cad6b3"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/cad6b3","method":"GET"} []
[2022-04-07T21:25:39.386671+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:25:39.388664+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:25:39.711464+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:25:39.718089+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:25:39.721309+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:25:39.722078+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:25:39.722419+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:25:39.724219+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:25:39.724600+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:25:39.726861+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:25:39.727206+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:25:39.727964+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:25:39.728277+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:25:39.729223+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:25:39.729843+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:25:39.730491+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:25:39.731683+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:25:39.740993+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:27:59.250034+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:27:59.250742+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:27:59.551320+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:27:59.559470+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:27:59.564006+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:27:59.564882+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:27:59.565240+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:27:59.567230+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:27:59.567684+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:27:59.570384+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:27:59.570747+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:27:59.571571+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:27:59.571919+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:27:59.573007+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:27:59.573666+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:27:59.574326+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:27:59.575529+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:27:59.585543+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:29:11.847227+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:29:11.848024+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:29:12.167281+00:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Notice: Undefined variable: data" at /var/www/html/books/src/Controller/BooksController.php line 54 {"exception":"[object] (ErrorException(code: 0): Notice: Undefined variable: data at /var/www/html/books/src/Controller/BooksController.php:54)"} []
[2022-04-07T21:29:12.178249+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:29:12.184136+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:29:12.187222+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:29:12.188072+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:29:12.188407+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:29:12.190475+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:29:12.191079+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:29:12.193670+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:29:12.194038+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:29:12.194805+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:29:12.195134+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:29:12.196122+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:29:12.196697+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:29:12.197415+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:29:12.198728+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:29:12.218633+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:29:39.085392+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:29:39.086053+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:29:39.700013+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:29:39.709622+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:29:39.713285+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:29:39.714115+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:29:39.714500+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:29:39.716680+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:29:39.717206+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:29:39.720015+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:29:39.720380+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:29:39.721361+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:29:39.721758+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:29:39.722894+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:29:39.723541+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:29:39.724257+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:29:39.725552+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:29:39.734687+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:30:22.717429+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:30:22.718196+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:30:23.013542+00:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Notice: Undefined variable: data" at /var/www/html/books/src/Controller/BooksController.php line 54 {"exception":"[object] (ErrorException(code: 0): Notice: Undefined variable: data at /var/www/html/books/src/Controller/BooksController.php:54)"} []
[2022-04-07T21:30:23.025628+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:30:23.032591+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:30:23.035742+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:30:23.036566+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:30:23.037000+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:30:23.038867+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:30:23.039271+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:30:23.041650+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:30:23.041955+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:30:23.042670+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:30:23.042958+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:30:23.043924+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:30:23.044463+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:30:23.045067+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:30:23.046075+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:30:23.065190+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:30:35.181582+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:30:35.182292+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:30:35.483048+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:30:35.490059+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:30:35.492917+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:30:35.493581+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:30:35.493898+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:30:35.496058+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:30:35.496467+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:30:35.498967+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:30:35.499309+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:30:35.500031+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:30:35.500327+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:30:35.501279+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:30:35.502213+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:30:35.503557+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:30:35.505052+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:30:35.513388+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:32:08.315026+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:32:08.316796+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:32:08.586570+00:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Notice: Undefined variable: Urls" at /var/www/html/books/src/Controller/BooksController.php line 55 {"exception":"[object] (ErrorException(code: 0): Notice: Undefined variable: Urls at /var/www/html/books/src/Controller/BooksController.php:55)"} []
[2022-04-07T21:32:08.596902+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:32:08.602927+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:32:08.606465+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:32:08.607277+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:32:08.607580+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:32:08.609379+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:32:08.609776+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:32:08.612326+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:32:08.612620+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:32:08.613661+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:32:08.614006+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:32:08.615092+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:32:08.615630+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:32:08.616152+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:32:08.617236+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:32:08.638226+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:32:22.933359+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:32:22.934018+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:32:23.222293+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:32:23.228061+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:32:23.231314+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:32:23.232008+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:32:23.232278+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:32:23.234100+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:32:23.234531+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:32:23.237061+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:32:23.237375+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:32:23.238102+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:32:23.238401+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:32:23.239344+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:32:23.239919+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:32:23.240555+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:32:23.241728+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:32:23.250688+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:39:31.730009+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:39:31.730827+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:39:32.336318+00:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Warning: file_get_contents(catalog.php?q={searchTerms}): failed to open stream: No such file or directory" at /var/www/html/books/src/Controller/BooksController.php line 57 {"exception":"[object] (ErrorException(code: 0): Warning: file_get_contents(catalog.php?q={searchTerms}): failed to open stream: No such file or directory at /var/www/html/books/src/Controller/BooksController.php:57)"} []
[2022-04-07T21:39:32.357855+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:39:32.365518+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:39:32.369419+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:39:32.370339+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:39:32.370795+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:39:32.373204+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:39:32.373749+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:39:32.376577+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:39:32.376903+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:39:32.377635+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:39:32.377951+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:39:32.378898+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:39:32.379437+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:39:32.380033+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:39:32.381096+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:39:32.402748+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:39:32.493072+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7477c5"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/7477c5","method":"GET"} []
[2022-04-07T21:40:07.172686+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:40:07.173431+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:40:07.450222+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:40:07.456149+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:40:07.459093+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:40:07.459767+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:40:07.460072+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:40:07.461885+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:40:07.462286+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:40:07.464820+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:40:07.465154+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:40:07.465936+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:40:07.466254+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:40:07.467277+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:40:07.467843+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:40:07.468568+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:40:07.470134+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:40:07.478915+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:40:07.513220+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"797536"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/797536","method":"GET"} []
[2022-04-07T21:41:02.758045+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:41:02.758699+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:41:03.100020+00:00] php.CRITICAL: Uncaught Error: Call to undefined function App\Controller\var_damp() {"exception":"[object] (Error(code: 0): Call to undefined function App\\Controller\\var_damp() at /var/www/html/books/src/Controller/BooksController.php:67)"} []
[2022-04-07T21:41:03.121803+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\UndefinedFunctionError: "Attempted to call function "var_damp" from namespace "App\Controller"." at /var/www/html/books/src/Controller/BooksController.php line 67 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\UndefinedFunctionError(code: 0): Attempted to call function \"var_damp\" from namespace \"App\\Controller\". at /var/www/html/books/src/Controller/BooksController.php:67)"} []
[2022-04-07T21:41:03.132542+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:41:03.138789+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:41:03.141483+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:41:03.142124+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:41:03.142435+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:41:03.144071+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:41:03.144462+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:41:03.146857+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:41:03.147185+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:41:03.147957+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:41:03.148264+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:41:03.149582+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:41:03.150707+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:41:03.151648+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:41:03.152758+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:41:03.172367+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:41:11.708115+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:41:11.708748+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:41:12.306438+00:00] php.CRITICAL: Uncaught Error: Call to undefined function App\Controller\var_damp() {"exception":"[object] (Error(code: 0): Call to undefined function App\\Controller\\var_damp() at /var/www/html/books/src/Controller/BooksController.php:67)"} []
[2022-04-07T21:41:12.315825+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\UndefinedFunctionError: "Attempted to call function "var_damp" from namespace "App\Controller"." at /var/www/html/books/src/Controller/BooksController.php line 67 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\UndefinedFunctionError(code: 0): Attempted to call function \"var_damp\" from namespace \"App\\Controller\". at /var/www/html/books/src/Controller/BooksController.php:67)"} []
[2022-04-07T21:41:12.336764+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:41:12.345746+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:41:12.350039+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:41:12.350979+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:41:12.351403+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:41:12.353588+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:41:12.354061+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:41:12.357125+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:41:12.357563+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:41:12.358659+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:41:12.359038+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:41:12.360340+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:41:12.361088+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:41:12.361888+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:41:12.363343+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:41:12.394446+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:41:12.456279+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b74478"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/b74478","method":"GET"} []
[2022-04-07T21:41:53.606820+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:41:53.607576+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:41:53.899754+00:00] php.CRITICAL: Uncaught Error: Call to undefined function App\Controller\var_damp() {"exception":"[object] (Error(code: 0): Call to undefined function App\\Controller\\var_damp() at /var/www/html/books/src/Controller/BooksController.php:51)"} []
[2022-04-07T21:41:53.904112+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\UndefinedFunctionError: "Attempted to call function "var_damp" from namespace "App\Controller"." at /var/www/html/books/src/Controller/BooksController.php line 51 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\UndefinedFunctionError(code: 0): Attempted to call function \"var_damp\" from namespace \"App\\Controller\". at /var/www/html/books/src/Controller/BooksController.php:51)"} []
[2022-04-07T21:41:53.919244+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:41:53.925393+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:41:53.928336+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:41:53.929068+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:41:53.929513+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:41:53.932056+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:41:53.932485+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:41:53.934905+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:41:53.935239+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:41:53.935986+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:41:53.936278+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:41:53.937385+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:41:53.937982+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:41:53.938626+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:41:53.939727+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:41:53.958424+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:41:54.023415+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0c8bf3"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/0c8bf3","method":"GET"} []
[2022-04-07T21:42:28.547116+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:42:28.547978+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:42:28.819404+00:00] php.CRITICAL: Uncaught Error: Call to undefined function App\Controller\var_damp() {"exception":"[object] (Error(code: 0): Call to undefined function App\\Controller\\var_damp() at /var/www/html/books/src/Controller/BooksController.php:51)"} []
[2022-04-07T21:42:28.822981+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\UndefinedFunctionError: "Attempted to call function "var_damp" from namespace "App\Controller"." at /var/www/html/books/src/Controller/BooksController.php line 51 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\UndefinedFunctionError(code: 0): Attempted to call function \"var_damp\" from namespace \"App\\Controller\". at /var/www/html/books/src/Controller/BooksController.php:51)"} []
[2022-04-07T21:42:28.838473+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:42:28.845791+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:42:28.849376+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:42:28.850204+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:42:28.850560+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:42:28.852254+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:42:28.852602+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:42:28.854953+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:42:28.855289+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:42:28.856002+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:42:28.856353+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:42:28.857342+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:42:28.857953+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:42:28.858600+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:42:28.859793+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:42:28.881973+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:42:28.948837+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0ad78f"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/0ad78f","method":"GET"} []
[2022-04-07T21:42:46.618410+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:42:46.619078+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:42:46.952989+00:00] php.CRITICAL: Uncaught Error: Call to undefined function App\Controller\var_damp() {"exception":"[object] (Error(code: 0): Call to undefined function App\\Controller\\var_damp() at /var/www/html/books/src/Controller/BooksController.php:51)"} []
[2022-04-07T21:42:46.957045+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\UndefinedFunctionError: "Attempted to call function "var_damp" from namespace "App\Controller"." at /var/www/html/books/src/Controller/BooksController.php line 51 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\UndefinedFunctionError(code: 0): Attempted to call function \"var_damp\" from namespace \"App\\Controller\". at /var/www/html/books/src/Controller/BooksController.php:51)"} []
[2022-04-07T21:42:46.973691+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:42:46.981048+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:42:46.983813+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:42:46.984459+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:42:46.984763+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:42:46.986302+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:42:46.986684+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:42:46.989017+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:42:46.989334+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:42:46.990026+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:42:46.990333+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:42:46.991313+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:42:46.991874+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:42:46.992512+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:42:46.994462+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:42:47.014310+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:42:47.081285+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"af2ff9"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/af2ff9","method":"GET"} []
[2022-04-07T21:42:58.999359+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:42:59.000037+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:42:59.289448+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:42:59.296386+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:42:59.299489+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:42:59.300149+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:42:59.300574+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:42:59.302473+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:42:59.302843+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:42:59.305284+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:42:59.305657+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:42:59.306446+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:42:59.306773+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:42:59.307813+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:42:59.308492+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:42:59.309228+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:42:59.310647+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:42:59.319494+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:42:59.355750+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"cc52ad"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/cc52ad","method":"GET"} []
[2022-04-07T21:43:09.186397+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:43:09.187061+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:43:09.760902+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:43:09.769299+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:43:09.773126+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:43:09.774011+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:43:09.774425+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:43:09.777544+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:43:09.778128+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:43:09.780831+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:43:09.781214+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:43:09.782056+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:43:09.782499+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:43:09.783773+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:43:09.784432+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:43:09.785051+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:43:09.786253+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:43:09.797006+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:43:09.834628+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bbafb0"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/bbafb0","method":"GET"} []
[2022-04-07T21:43:12.032179+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:43:12.032824+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:43:12.300054+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:43:12.305606+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:43:12.308504+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:43:12.309272+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:43:12.309550+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:43:12.311020+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:43:12.311350+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:43:12.313623+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:43:12.313899+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:43:12.314540+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:43:12.314779+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:43:12.315622+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:43:12.316103+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:43:12.316628+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:43:12.317616+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:43:12.326755+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:43:45.846590+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:43:45.848082+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:43:46.138470+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:43:46.144304+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:43:46.147114+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:43:46.147801+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:43:46.148132+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:43:46.149691+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:43:46.150030+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:43:46.152453+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:43:46.152805+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:43:46.153569+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:43:46.153937+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:43:46.154973+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:43:46.155537+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:43:46.156213+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:43:46.157701+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:43:46.166425+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:44:07.417724+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:44:07.418444+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:44:07.733186+00:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Warning: file_get_contents(catalog.php?q={searchTerms}): failed to open stream: No such file or directory" at /var/www/html/books/src/Controller/BooksController.php line 58 {"exception":"[object] (ErrorException(code: 0): Warning: file_get_contents(catalog.php?q={searchTerms}): failed to open stream: No such file or directory at /var/www/html/books/src/Controller/BooksController.php:58)"} []
[2022-04-07T21:44:07.746577+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:44:07.753013+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:44:07.756819+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:44:07.757658+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:44:07.758068+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:44:07.759700+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:44:07.760043+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:44:07.762392+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:44:07.762729+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:44:07.763489+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:44:07.763785+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:44:07.764750+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:44:07.765299+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:44:07.765935+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:44:07.767118+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:44:07.788085+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:44:41.847127+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:44:41.847858+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:44:42.164091+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:44:42.170417+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:44:42.173623+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:44:42.174394+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:44:42.174738+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:44:42.176526+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:44:42.176945+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:44:42.179513+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:44:42.179854+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:44:42.180697+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:44:42.181000+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:44:42.182077+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:44:42.182674+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:44:42.183351+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:44:42.184603+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:44:42.194028+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:45:17.473552+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:45:17.474270+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:45:17.755628+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:45:17.761645+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:45:17.764268+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:45:17.764849+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:45:17.765090+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:45:17.767115+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:45:17.767470+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:45:17.770190+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:45:17.770487+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:45:17.771269+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:45:17.771506+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:45:17.772410+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:45:17.772919+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:45:17.773452+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:45:17.774461+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:45:17.785178+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:46:07.274365+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:46:07.274995+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:46:07.589921+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:46:07.598329+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:46:07.602077+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:46:07.602926+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:46:07.603353+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:46:07.606058+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:46:07.606511+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:46:07.609312+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:46:07.609701+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:46:07.610532+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:46:07.610877+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:46:07.611993+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:46:07.612651+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:46:07.613423+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:46:07.614765+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:46:07.623499+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:46:51.463448+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:46:51.465029+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:46:51.766760+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:46:51.774636+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:46:51.778330+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:46:51.779381+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:46:51.779821+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:46:51.781982+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:46:51.782443+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:46:51.785069+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:46:51.785435+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:46:51.786240+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:46:51.786540+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:46:51.787503+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:46:51.788107+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:46:51.788717+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:46:51.789819+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:46:51.799801+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:47:02.277656+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:47:02.278641+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:47:14.308775+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:47:14.316317+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:47:14.320049+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:47:14.320801+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:47:14.321154+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:47:14.322989+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:47:14.323406+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:47:14.326016+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:47:14.326379+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:47:14.327206+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:47:14.327548+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:47:14.329663+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:47:14.330605+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:47:14.331318+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:47:14.332461+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:47:14.359958+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:47:31.367373+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:47:31.368052+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:47:44.747535+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:47:44.756549+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:47:44.761023+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:47:44.761992+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:47:44.762447+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:47:44.764556+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:47:44.764976+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:47:44.767738+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:47:44.768173+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:47:44.769000+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:47:44.769315+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:47:44.770294+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:47:44.770843+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:47:44.771502+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:47:44.772684+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:47:44.797248+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:47:44.835790+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b33616"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/b33616","method":"GET"} []
[2022-04-07T21:50:02.805187+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:50:02.805797+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:50:03.585956+00:00] request.CRITICAL: Uncaught PHP Exception InvalidArgumentException: "Attaching DOM nodes from multiple documents in the same crawler is forbidden." at /var/www/html/books/vendor/symfony/dom-crawler/Crawler.php line 309 {"exception":"[object] (InvalidArgumentException(code: 0): Attaching DOM nodes from multiple documents in the same crawler is forbidden. at /var/www/html/books/vendor/symfony/dom-crawler/Crawler.php:309)"} []
[2022-04-07T21:50:03.609820+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:50:03.616019+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:50:03.619471+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:50:03.620623+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:50:03.620997+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:50:03.622586+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:50:03.622934+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:50:03.625258+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:50:03.625586+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:50:03.626275+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:50:03.626560+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:50:03.627511+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:50:03.628091+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:50:03.628675+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:50:03.629727+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:50:03.650884+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:50:12.259793+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:50:12.260407+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:50:13.375984+00:00] request.CRITICAL: Uncaught PHP Exception InvalidArgumentException: "Attaching DOM nodes from multiple documents in the same crawler is forbidden." at /var/www/html/books/vendor/symfony/dom-crawler/Crawler.php line 309 {"exception":"[object] (InvalidArgumentException(code: 0): Attaching DOM nodes from multiple documents in the same crawler is forbidden. at /var/www/html/books/vendor/symfony/dom-crawler/Crawler.php:309)"} []
[2022-04-07T21:50:13.400717+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:50:13.407330+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:50:13.410094+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:50:13.410726+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:50:13.411027+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:50:13.412693+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:50:13.413045+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:50:13.415358+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:50:13.415712+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:50:13.416445+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:50:13.416735+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:50:13.418000+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:50:13.418751+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:50:13.419747+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:50:13.421107+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:50:13.450124+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:50:13.512653+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"89fed4"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/89fed4","method":"GET"} []
[2022-04-07T21:50:58.925299+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:50:58.925998+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:51:00.017578+00:00] request.CRITICAL: Uncaught PHP Exception InvalidArgumentException: "Attaching DOM nodes from multiple documents in the same crawler is forbidden." at /var/www/html/books/vendor/symfony/dom-crawler/Crawler.php line 309 {"exception":"[object] (InvalidArgumentException(code: 0): Attaching DOM nodes from multiple documents in the same crawler is forbidden. at /var/www/html/books/vendor/symfony/dom-crawler/Crawler.php:309)"} []
[2022-04-07T21:51:00.045786+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:51:00.052544+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:51:00.055511+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:51:00.056290+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:51:00.056707+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:51:00.058600+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:51:00.059015+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:51:00.061549+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:51:00.061892+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:51:00.062652+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:51:00.062955+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:51:00.063938+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:51:00.064509+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:51:00.065316+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:51:00.066776+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:51:00.086590+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:51:00.155807+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3223ba"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/3223ba","method":"GET"} []
[2022-04-07T21:51:20.474203+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:51:20.474856+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:51:21.895193+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:51:21.900958+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:51:21.903652+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:51:21.904298+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:51:21.904631+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:51:21.906240+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:51:21.906605+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:51:21.909301+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:51:21.909672+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:51:21.910474+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:51:21.910813+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:51:21.911778+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:51:21.912396+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:51:21.913087+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:51:21.914610+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:51:21.923882+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:51:21.962008+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a9a915"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/a9a915","method":"GET"} []
[2022-04-07T21:51:44.284596+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:51:44.285249+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:51:45.363939+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:51:45.370975+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:51:45.374108+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:51:45.374867+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:51:45.375230+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:51:45.376973+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:51:45.377370+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:51:45.380350+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:51:45.380737+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:51:45.381549+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:51:45.381860+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:51:45.382843+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:51:45.383468+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:51:45.384132+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:51:45.385302+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:51:45.395846+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:51:45.432913+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e0d602"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/e0d602","method":"GET"} []
[2022-04-07T21:52:05.667255+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:52:05.668038+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:52:06.773314+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:52:06.779088+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:52:06.781827+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:52:06.782479+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:52:06.782745+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:52:06.784844+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:52:06.785219+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:52:06.787612+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:52:06.787858+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:52:06.788583+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:52:06.788823+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:52:06.789689+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:52:06.790144+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:52:06.790688+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:52:06.791659+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:52:06.800036+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:52:06.833440+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bcba8c"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/bcba8c","method":"GET"} []
[2022-04-07T21:52:12.003031+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:52:12.003604+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:52:12.931111+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:52:12.937143+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:52:12.939941+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:52:12.940562+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:52:12.940781+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:52:12.942190+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:52:12.942501+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:52:12.944985+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:52:12.945317+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:52:12.946037+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:52:12.946323+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:52:12.947215+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:52:12.947727+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:52:12.948328+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:52:12.949289+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:52:12.957343+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:52:39.095882+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:52:39.096562+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:52:40.184891+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:52:40.192105+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:52:40.195801+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:52:40.196644+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:52:40.197019+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:52:40.198881+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:52:40.199284+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:52:40.201905+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:52:40.202286+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:52:40.203099+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:52:40.203461+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:52:40.204540+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:52:40.205154+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:52:40.205879+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:52:40.207197+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:52:40.217509+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:54:35.240485+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:54:35.241131+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:54:36.643178+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:54:36.651354+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:54:36.655264+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:54:36.656020+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:54:36.656369+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:54:36.658391+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:54:36.658786+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:54:36.661245+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:54:36.661575+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:54:36.662363+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:54:36.662662+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:54:36.663651+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:54:36.664211+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:54:36.664840+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:54:36.666085+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:54:36.676536+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:57:16.135969+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:57:16.136659+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:57:17.594958+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:57:17.604725+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:57:17.608480+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:57:17.609350+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:57:17.609759+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:57:17.612323+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:57:17.612901+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:57:17.616049+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:57:17.616469+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:57:17.617391+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:57:17.617798+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:57:17.619006+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:57:17.619676+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:57:17.620394+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:57:17.621613+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:57:17.632226+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:58:21.139855+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:58:21.140773+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:58:22.499116+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:58:22.507562+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:58:22.511365+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:58:22.512217+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:58:22.512616+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:58:22.514513+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:58:22.514911+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:58:22.517612+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:58:22.518060+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:58:22.518901+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:58:22.519254+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:58:22.520354+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:58:22.521001+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:58:22.521714+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:58:22.523053+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:58:22.534496+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T21:59:19.518583+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T21:59:19.519226+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T21:59:21.233516+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T21:59:21.240829+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:59:21.244169+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T21:59:21.244901+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T21:59:21.245234+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T21:59:21.246960+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:59:21.247332+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T21:59:21.249803+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:59:21.250153+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T21:59:21.250997+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:59:21.251326+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T21:59:21.252326+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T21:59:21.253003+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T21:59:21.253877+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T21:59:21.255428+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T21:59:21.264966+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T22:17:49.085273+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T22:17:49.086050+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T22:18:04.152664+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T22:18:04.162726+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T22:18:04.166627+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T22:18:04.167505+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T22:18:04.167992+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T22:18:04.170808+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:18:04.171322+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T22:18:04.174352+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:18:04.174725+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T22:18:04.175738+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:18:04.176074+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T22:18:04.177124+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T22:18:04.177776+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T22:18:04.178515+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T22:18:04.179800+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:18:04.191058+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T22:18:30.668214+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T22:18:30.668872+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T22:18:37.792134+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T22:18:37.792899+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T22:18:47.866088+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T22:18:47.872809+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T22:18:47.875460+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T22:18:47.876018+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T22:18:47.876261+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T22:18:47.878121+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:18:47.878510+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T22:18:47.880878+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:18:47.881177+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T22:18:47.881941+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:18:47.882145+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T22:18:47.882950+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T22:18:47.883389+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T22:18:47.883855+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T22:18:47.884766+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:18:47.892882+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T22:18:48.378424+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T22:18:48.384240+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T22:18:48.387269+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T22:18:48.388021+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T22:18:48.388342+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T22:18:48.389934+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:18:48.390240+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T22:18:48.392495+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:18:48.392902+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T22:18:48.393662+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:18:48.393928+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T22:18:48.394789+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T22:18:48.395247+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T22:18:48.395822+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T22:18:48.396853+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:18:48.404879+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T22:20:18.468551+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T22:20:18.469230+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T22:20:31.525182+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T22:20:31.534617+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T22:20:31.537641+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T22:20:31.538381+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T22:20:31.538720+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T22:20:31.540982+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:20:31.541416+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T22:20:31.543925+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:20:31.544263+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T22:20:31.545034+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:20:31.545342+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T22:20:31.546397+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T22:20:31.547371+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T22:20:31.548838+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T22:20:31.550142+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:20:31.559353+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T22:21:10.454297+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T22:21:10.454989+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T22:21:23.265941+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T22:21:23.275033+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T22:21:23.279348+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T22:21:23.280181+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T22:21:23.280542+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T22:21:23.283176+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:21:23.283710+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T22:21:23.286145+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:21:23.286496+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T22:21:23.287226+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:21:23.287517+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T22:21:23.288532+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T22:21:23.289098+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T22:21:23.289711+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T22:21:23.290797+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:21:23.301074+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T22:21:32.504999+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T22:21:32.505931+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T22:21:44.005774+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T22:21:44.015642+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T22:21:44.020412+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T22:21:44.021594+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T22:21:44.022092+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T22:21:44.024429+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:21:44.024918+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T22:21:44.028900+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:21:44.029323+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T22:21:44.030206+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:21:44.030563+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T22:21:44.031713+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T22:21:44.032373+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T22:21:44.033041+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T22:21:44.034111+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:21:44.054004+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T22:23:13.000503+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T22:23:13.001208+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T22:23:24.373757+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T22:23:24.381517+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T22:23:24.385346+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T22:23:24.386168+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T22:23:24.386514+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T22:23:24.389023+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:23:24.389554+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T22:23:24.392202+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:23:24.392551+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T22:23:24.393297+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:23:24.393607+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T22:23:24.394592+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T22:23:24.395160+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T22:23:24.395814+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T22:23:24.396924+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:23:24.407341+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T22:23:55.592620+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T22:23:55.593303+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T22:24:07.766281+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T22:24:07.772970+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T22:24:07.776633+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T22:24:07.777528+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T22:24:07.777839+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T22:24:07.780383+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:24:07.780808+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T22:24:07.783169+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:24:07.783460+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T22:24:07.784094+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:24:07.784446+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T22:24:07.785828+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T22:24:07.786649+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T22:24:07.787615+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T22:24:07.788781+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:24:07.799227+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T22:24:30.436627+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T22:24:30.437460+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T22:24:55.895985+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T22:24:55.904671+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T22:24:55.907746+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T22:24:55.908344+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T22:24:55.908589+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T22:24:55.911183+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:24:55.911550+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T22:24:55.913767+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:24:55.914078+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T22:24:55.914709+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:24:55.915003+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T22:24:55.915981+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T22:24:55.916499+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T22:24:55.917019+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T22:24:55.918005+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:24:55.926168+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T22:25:57.324873+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T22:25:57.325722+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T22:26:22.738405+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T22:26:22.749038+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T22:26:22.752832+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T22:26:22.753755+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T22:26:22.754145+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T22:26:22.756707+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:26:22.757161+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T22:26:22.760100+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:26:22.760584+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T22:26:22.761812+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:26:22.762305+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T22:26:22.763559+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T22:26:22.764153+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T22:26:22.764819+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T22:26:22.765944+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:26:22.779624+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T22:27:50.908350+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T22:27:50.909138+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T22:28:05.587760+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T22:28:05.594016+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T22:28:05.596839+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T22:28:05.597536+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T22:28:05.597857+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T22:28:05.599685+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:28:05.600109+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T22:28:05.602666+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:28:05.603071+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T22:28:05.603966+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:28:05.604503+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T22:28:05.606262+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T22:28:05.607153+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T22:28:05.608009+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T22:28:05.609187+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:28:05.618631+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T22:44:18.630166+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T22:44:18.630948+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T22:44:19.627643+00:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Warning: Use of undefined constant Author - assumed 'Author' (this will throw an Error in a future version of PHP)" at /var/www/html/books/src/Controller/BooksController.php line 79 {"exception":"[object] (ErrorException(code: 0): Warning: Use of undefined constant Author - assumed 'Author' (this will throw an Error in a future version of PHP) at /var/www/html/books/src/Controller/BooksController.php:79)"} []
[2022-04-07T22:44:19.647090+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T22:44:19.653354+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T22:44:19.656239+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T22:44:19.656902+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T22:44:19.657206+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T22:44:19.658834+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:44:19.659177+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T22:44:19.661658+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:44:19.662032+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T22:44:19.662837+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:44:19.663134+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T22:44:19.664088+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T22:44:19.664684+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T22:44:19.665376+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T22:44:19.666557+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:44:19.687395+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T22:44:45.831135+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T22:44:45.832749+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T22:44:46.425760+00:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Warning: Creating default object from empty value" at /var/www/html/books/src/Controller/BooksController.php line 79 {"exception":"[object] (ErrorException(code: 0): Warning: Creating default object from empty value at /var/www/html/books/src/Controller/BooksController.php:79)"} []
[2022-04-07T22:44:46.447031+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T22:44:46.454462+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T22:44:46.457754+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T22:44:46.458538+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T22:44:46.458897+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T22:44:46.460674+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:44:46.461073+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T22:44:46.463823+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:44:46.464200+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T22:44:46.464940+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:44:46.465252+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T22:44:46.466271+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T22:44:46.466843+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T22:44:46.467498+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T22:44:46.468725+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:44:46.493652+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T22:45:51.291060+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T22:45:51.291766+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T22:45:51.863841+00:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Warning: Creating default object from empty value" at /var/www/html/books/src/Controller/BooksController.php line 79 {"exception":"[object] (ErrorException(code: 0): Warning: Creating default object from empty value at /var/www/html/books/src/Controller/BooksController.php:79)"} []
[2022-04-07T22:45:51.885367+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T22:45:51.893219+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T22:45:51.897076+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T22:45:51.897832+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T22:45:51.898254+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T22:45:51.900107+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:45:51.900517+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T22:45:51.903118+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:45:51.903475+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T22:45:51.904267+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:45:51.904627+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T22:45:51.905777+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T22:45:51.906410+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T22:45:51.907063+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T22:45:51.908275+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:45:51.931973+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T22:46:01.426339+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T22:46:01.426931+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T22:46:01.996534+00:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Warning: Creating default object from empty value" at /var/www/html/books/src/Controller/BooksController.php line 79 {"exception":"[object] (ErrorException(code: 0): Warning: Creating default object from empty value at /var/www/html/books/src/Controller/BooksController.php:79)"} []
[2022-04-07T22:46:02.009451+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T22:46:02.015542+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T22:46:02.018356+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T22:46:02.019042+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T22:46:02.019336+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T22:46:02.020957+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:46:02.021327+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T22:46:02.023593+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:46:02.023925+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T22:46:02.024635+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:46:02.024932+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T22:46:02.025961+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T22:46:02.026558+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T22:46:02.027211+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T22:46:02.028400+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:46:02.059415+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T22:46:05.306383+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T22:46:05.307019+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T22:46:05.852395+00:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Warning: Creating default object from empty value" at /var/www/html/books/src/Controller/BooksController.php line 79 {"exception":"[object] (ErrorException(code: 0): Warning: Creating default object from empty value at /var/www/html/books/src/Controller/BooksController.php:79)"} []
[2022-04-07T22:46:05.871053+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T22:46:05.880141+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T22:46:05.884455+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T22:46:05.885458+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T22:46:05.885892+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T22:46:05.887835+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:46:05.888420+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T22:46:05.891451+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:46:05.891956+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T22:46:05.892937+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:46:05.893345+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T22:46:05.894629+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T22:46:05.895320+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T22:46:05.896008+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T22:46:05.897160+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:46:05.917914+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T22:46:05.986281+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4c349e"},"request_uri":"http://127.0.0.1/books/public/index.php/_wdt/4c349e","method":"GET"} []
[2022-04-07T22:52:00.889787+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T22:52:00.890610+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T22:52:03.504371+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T22:52:03.511246+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T22:52:03.514151+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T22:52:03.514871+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T22:52:03.515194+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T22:52:03.516840+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:52:03.517185+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T22:52:03.519739+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:52:03.520090+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T22:52:03.521106+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:52:03.521636+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T22:52:03.523103+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T22:52:03.523859+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T22:52:03.524501+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T22:52:03.525611+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:52:03.535757+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T22:52:28.847115+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T22:52:28.847796+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T22:52:31.207420+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T22:52:31.217267+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T22:52:31.221242+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T22:52:31.222200+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T22:52:31.222599+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T22:52:31.224763+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:52:31.225226+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T22:52:31.228187+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:52:31.228576+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T22:52:31.229367+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:52:31.229703+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T22:52:31.230822+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T22:52:31.231470+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T22:52:31.232144+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T22:52:31.233294+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:52:31.243847+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T22:53:45.681489+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T22:53:45.682349+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T22:53:50.322274+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T22:53:50.327700+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T22:53:50.330620+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T22:53:50.331238+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T22:53:50.331456+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T22:53:50.333808+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:53:50.334173+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T22:53:50.336565+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:53:50.336889+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T22:53:50.337667+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:53:50.337941+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T22:53:50.338918+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T22:53:50.339504+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T22:53:50.340183+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T22:53:50.341417+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:53:50.351750+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T22:57:03.155616+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T22:57:03.156391+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T22:57:07.569109+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T22:57:07.578882+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T22:57:07.582660+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T22:57:07.583547+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T22:57:07.583952+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T22:57:07.586331+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:57:07.586932+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T22:57:07.590317+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:57:07.590713+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T22:57:07.591590+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:57:07.591914+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T22:57:07.593012+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T22:57:07.593610+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T22:57:07.594271+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T22:57:07.595517+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T22:57:07.608299+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T23:02:03.596452+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T23:02:03.597141+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T23:02:07.341754+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T23:02:07.347431+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:02:07.350123+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T23:02:07.350771+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T23:02:07.351066+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:02:07.352735+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:02:07.353109+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T23:02:07.356468+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:02:07.356912+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T23:02:07.357679+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:02:07.357926+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T23:02:07.358960+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T23:02:07.359508+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T23:02:07.360066+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T23:02:07.361084+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:02:07.371431+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T23:05:17.363887+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T23:05:17.364671+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T23:05:23.803760+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T23:05:23.809212+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:05:23.811791+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T23:05:23.812394+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T23:05:23.812658+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:05:23.814047+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:05:23.814335+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T23:05:23.816440+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:05:23.816725+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T23:05:23.817348+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:05:23.817629+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T23:05:23.818517+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T23:05:23.818975+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T23:05:23.819418+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T23:05:23.820348+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:05:23.829275+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T23:05:59.154220+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T23:05:59.155056+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T23:06:06.184078+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T23:06:06.190960+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:06:06.194297+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T23:06:06.195084+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T23:06:06.195440+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:06:06.198074+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:06:06.198545+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T23:06:06.201392+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:06:06.201787+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T23:06:06.202591+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:06:06.202939+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T23:06:06.204085+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T23:06:06.204751+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T23:06:06.205515+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T23:06:06.207059+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:06:06.223989+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T23:07:46.832260+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T23:07:46.833136+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T23:07:59.339671+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T23:07:59.345382+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:07:59.348102+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T23:07:59.348814+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T23:07:59.349130+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:07:59.350795+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:07:59.351198+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T23:07:59.353469+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:07:59.353790+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T23:07:59.354586+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:07:59.354891+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T23:07:59.355832+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T23:07:59.356408+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T23:07:59.357063+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T23:07:59.358229+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:07:59.368727+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T23:08:54.080972+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T23:08:54.082108+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T23:09:08.051296+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T23:09:08.059611+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:09:08.063310+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T23:09:08.064195+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T23:09:08.064591+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:09:08.066690+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:09:08.067210+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T23:09:08.069925+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:09:08.070296+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T23:09:08.071069+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:09:08.071416+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T23:09:08.072477+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T23:09:08.073125+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T23:09:08.073825+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T23:09:08.074977+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:09:08.088556+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T23:11:03.555608+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T23:11:03.556365+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T23:11:17.414343+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T23:11:17.422130+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:11:17.425357+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T23:11:17.426169+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T23:11:17.426521+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:11:17.428388+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:11:17.428740+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T23:11:17.431077+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:11:17.431420+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T23:11:17.432169+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:11:17.432492+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T23:11:17.433543+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T23:11:17.434113+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T23:11:17.434749+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T23:11:17.435921+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:11:17.450046+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T23:12:08.794585+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T23:12:08.795358+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T23:12:21.009714+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T23:12:21.016114+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:12:21.018999+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T23:12:21.020013+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T23:12:21.020352+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:12:21.022489+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:12:21.022859+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T23:12:21.025110+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:12:21.025421+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T23:12:21.026159+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:12:21.026441+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T23:12:21.027347+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T23:12:21.027951+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T23:12:21.028568+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T23:12:21.029582+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:12:21.041636+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T23:14:16.187675+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T23:14:16.188514+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T23:14:20.384644+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T23:14:20.390654+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:14:20.393521+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T23:14:20.394146+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T23:14:20.394496+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:14:20.397276+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:14:20.398039+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T23:14:20.400707+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:14:20.401055+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T23:14:20.401740+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:14:20.402035+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T23:14:20.402938+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T23:14:20.403530+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T23:14:20.404170+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T23:14:20.405408+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:14:20.417726+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T23:16:40.906144+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T23:16:40.907302+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T23:16:44.179493+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T23:16:44.191407+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:16:44.194244+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T23:16:44.195001+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T23:16:44.195304+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:16:44.196842+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:16:44.197214+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T23:16:44.199719+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:16:44.199980+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T23:16:44.200615+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:16:44.200861+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T23:16:44.202852+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T23:16:44.203436+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T23:16:44.204543+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T23:16:44.206240+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:16:44.216999+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T23:17:20.135644+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T23:17:20.137419+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T23:17:20.713659+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T23:17:20.722413+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:17:20.726146+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T23:17:20.727067+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T23:17:20.727455+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:17:20.730353+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:17:20.730882+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T23:17:20.735228+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:17:20.735693+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T23:17:20.736651+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:17:20.737053+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T23:17:20.738409+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T23:17:20.739083+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T23:17:20.739818+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T23:17:20.741096+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:17:20.754100+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T23:17:40.321090+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T23:17:40.321921+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T23:17:40.840348+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T23:17:40.847124+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:17:40.850717+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T23:17:40.851584+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T23:17:40.851971+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:17:40.853956+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:17:40.854418+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T23:17:40.857402+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:17:40.857844+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T23:17:40.858894+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:17:40.859262+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T23:17:40.860439+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T23:17:40.861133+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T23:17:40.861946+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T23:17:40.863284+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:17:40.876165+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T23:18:48.413015+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T23:18:48.413948+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T23:18:49.238214+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T23:18:49.249421+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:18:49.254852+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T23:18:49.256242+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T23:18:49.256920+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:18:49.260139+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:18:49.260827+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T23:18:49.265593+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:18:49.266192+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T23:18:49.267430+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:18:49.267993+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T23:18:49.269060+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T23:18:49.269585+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T23:18:49.270255+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T23:18:49.271570+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:18:49.281012+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T23:20:20.237747+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T23:20:20.238616+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T23:20:21.676633+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T23:20:21.682556+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:20:21.685328+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T23:20:21.685900+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T23:20:21.686191+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:20:21.687783+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:20:21.688066+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T23:20:21.690196+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:20:21.690485+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T23:20:21.691314+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:20:21.691527+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T23:20:21.692403+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T23:20:21.692973+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T23:20:21.693587+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T23:20:21.694711+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:20:21.705776+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T23:21:11.260010+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T23:21:11.260905+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T23:21:12.428615+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T23:21:12.442165+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:21:12.447123+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T23:21:12.448155+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T23:21:12.448610+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:21:12.451205+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:21:12.451720+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T23:21:12.455466+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:21:12.455959+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T23:21:12.457052+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:21:12.457553+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T23:21:12.459007+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T23:21:12.459760+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T23:21:12.460594+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T23:21:12.462065+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:21:12.477194+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T23:23:54.724218+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T23:23:54.724879+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T23:24:01.512011+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T23:24:01.521001+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:24:01.524663+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T23:24:01.525510+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T23:24:01.525915+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:24:01.527755+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:24:01.528196+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T23:24:01.532215+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:24:01.532605+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T23:24:01.533453+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:24:01.533808+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T23:24:01.534802+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T23:24:01.535359+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T23:24:01.535981+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T23:24:01.537036+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:24:01.548202+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T23:24:45.700114+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T23:24:45.700791+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T23:24:46.244711+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T23:24:46.254644+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:24:46.259035+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T23:24:46.260092+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T23:24:46.260505+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:24:46.262635+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:24:46.263144+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T23:24:46.266198+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:24:46.266625+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T23:24:46.267558+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:24:46.267966+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T23:24:46.269070+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T23:24:46.269725+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T23:24:46.270434+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T23:24:46.271735+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:24:46.281460+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T23:25:38.850582+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T23:25:38.851295+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T23:25:39.411997+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T23:25:39.418498+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:25:39.421390+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T23:25:39.422144+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T23:25:39.422476+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:25:39.424304+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:25:39.424701+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T23:25:39.427056+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:25:39.427392+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T23:25:39.428126+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:25:39.428423+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T23:25:39.429408+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T23:25:39.429985+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T23:25:39.430616+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T23:25:39.431748+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:25:39.442883+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T23:26:22.550373+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T23:26:22.551216+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T23:26:23.376054+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T23:26:23.386477+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:26:23.390538+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T23:26:23.391405+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T23:26:23.391809+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:26:23.393826+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:26:23.394232+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T23:26:23.397022+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:26:23.397412+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T23:26:23.398347+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:26:23.398691+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T23:26:23.399780+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T23:26:23.400411+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T23:26:23.401151+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T23:26:23.402337+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:26:23.415217+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T23:28:06.487083+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T23:28:06.487973+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T23:28:07.339442+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T23:28:07.345480+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:28:07.348816+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T23:28:07.349538+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T23:28:07.349925+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:28:07.352115+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:28:07.352514+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T23:28:07.355023+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:28:07.355366+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T23:28:07.356145+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:28:07.356478+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T23:28:07.357534+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T23:28:07.358150+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T23:28:07.358822+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T23:28:07.360062+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:28:07.370066+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T23:28:33.893583+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T23:28:33.894346+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T23:28:35.295365+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T23:28:35.308325+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:28:35.312846+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T23:28:35.313829+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T23:28:35.314239+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:28:35.316530+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:28:35.317013+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T23:28:35.320213+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:28:35.320672+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T23:28:35.321704+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:28:35.322055+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T23:28:35.323196+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T23:28:35.323857+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T23:28:35.324577+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T23:28:35.325856+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:28:35.336994+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T23:29:11.967725+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T23:29:11.968594+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T23:29:13.650774+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T23:29:13.662864+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:29:13.667306+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T23:29:13.668376+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T23:29:13.668828+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:29:13.671378+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:29:13.671819+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T23:29:13.674935+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:29:13.675407+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T23:29:13.676544+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:29:13.676988+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T23:29:13.678567+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T23:29:13.679260+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T23:29:13.680009+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T23:29:13.681137+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:29:13.690506+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T23:30:44.742245+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T23:30:44.742887+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T23:30:48.892700+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T23:30:48.903568+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:30:48.908349+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T23:30:48.909250+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T23:30:48.909660+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:30:48.911833+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:30:48.912303+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T23:30:48.915040+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:30:48.915400+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T23:30:48.916260+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:30:48.916598+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T23:30:48.917722+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T23:30:48.918451+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T23:30:48.919152+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T23:30:48.920434+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:30:48.932373+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T23:34:29.989429+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T23:34:29.990124+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T23:34:33.963770+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T23:34:33.972894+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:34:33.976804+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T23:34:33.977759+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T23:34:33.978189+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:34:33.980472+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:34:33.980936+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T23:34:33.983595+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:34:33.983980+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T23:34:33.984752+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:34:33.985105+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T23:34:33.986241+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T23:34:33.986920+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T23:34:33.987624+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T23:34:33.988958+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:34:33.999868+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T23:34:50.756333+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T23:34:50.756985+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T23:34:55.177267+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T23:34:55.188445+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:34:55.193573+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T23:34:55.194600+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T23:34:55.194989+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:34:55.197130+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:34:55.197600+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T23:34:55.200630+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:34:55.201057+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T23:34:55.201981+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:34:55.202372+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T23:34:55.203579+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T23:34:55.204208+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T23:34:55.204963+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T23:34:55.206234+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:34:55.216741+00:00] doctrine.INFO: Disconnecting [] []
[2022-04-07T23:35:10.405798+00:00] request.INFO: Matched route "app_book_create". {"route":"app_book_create","route_parameters":{"_route":"app_book_create","_controller":"App\\Controller\\BooksController::getBooks"},"request_uri":"http://127.0.0.1/books/public/index.php/books/parse_books","method":"GET"} []
[2022-04-07T23:35:10.406639+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-04-07T23:35:14.562415+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"books","serverVersion":"13","charset":"utf8"}} []
[2022-04-07T23:35:14.575476+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:35:14.580109+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-04-07T23:35:14.581156+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-04-07T23:35:14.581621+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-04-07T23:35:14.584207+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:35:14.584786+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-04-07T23:35:14.588640+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:35:14.589113+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-04-07T23:35:14.590305+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:35:14.590765+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-04-07T23:35:14.592843+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=24577 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-04-07T23:35:14.593868+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-04-07T23:35:14.594818+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-04-07T23:35:14.596333+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-04-07T23:35:14.613664+00:00] doctrine.INFO: Disconnecting [] []
